{
    "pipes": [],
    "interfaces": [
        {
            "name": "IAdvanceTableDataService",
            "id": "interface-IAdvanceTableDataService-c9f2bce641e491502a3fe658db41e6c05a21aaa84fae55ee4c69ba78bbfa6965f1a6a3f9a9a324bb18136b381f44692a19e6aa12f2a3845185e2c46d0476e801",
            "file": "libs/material/table/src/lib/advance-table/advance-table-data.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PageEvent } from '@angular/material/paginator';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { IID } from '@mdtx/common';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface IAdvanceTableDataService<T extends IID> {\r\n  entities$: Observable<T[]>;\r\n  countAll$: Observable<number>;\r\n  advanceQuery(search: string, page: PageEvent, sort: Sort): Observable<T[]>;\r\n}\r\n",
            "properties": [
                {
                    "name": "countAll$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "entities$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<T[]>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "advanceQuery",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AdvanceTableService",
            "id": "class-AdvanceTableService-8f915a6d4e7afaf6739d02b37d18ef7f44d1c7e7db7fe9fcc42652d6aafee51c032ff2f4a9aee94487bdfabe0643bec986f6de9c8680ecb347b77c4c73bbca21",
            "file": "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { IAdvanceTableDataService } from './advance-table-data.service';\r\nimport { IID } from '@mdtx/common';\r\nimport {\r\n  BehaviorSubject,\r\n  Observable,\r\n  combineLatest,\r\n  debounceTime,\r\n  map,\r\n  of,\r\n} from 'rxjs';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Sort } from '@angular/material/sort';\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    name: \"John's Object 1\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-03-01T11:26:07.723Z'),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Alice's Object 2\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-09T15:36:32.423Z'),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Bob's Object 3\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-07-21T05:47:03.519Z'),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Emma's Object 4\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-17T10:02:12.822Z'),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Oliver's Object 5\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-08-27T18:14:09.051Z'),\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sophia's Object 6\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-19T19:40:49.333Z'),\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"James's Object 7\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-11-27T17:52:16.028Z'),\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Mia's Object 8\",\r\n    category: 'B40',\r\n    createdAt: new Date('2023-02-03T09:32:01.867Z'),\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"William's Object 9\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-04-27T07:28:22.381Z'),\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Charlotte's Object 10\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-01-11T20:02:19.622Z'),\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"John's Object 11\",\r\n    category: 'B30',\r\n    createdAt: new Date('2023-01-20T07:55:47.206Z'),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Alice's Object 12\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-06-22T04:16:23.102Z'),\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Bob's Object 13\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-05-02T17:09:14.341Z'),\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Emma's Object 14\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-10-05T08:42:58.009Z'),\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Oliver's Object 15\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-12-30T23:45:37.193Z'),\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Sophia's Object 16\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-09-14T05:32:12.625Z'),\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"James's Object 17\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-03-25T14:09:08.914Z'),\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Mia's Object 18\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-11-16T16:24:52.287Z'),\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"William's Object 19\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-05-29T11:38:49.932Z'),\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Charlotte's Object 20\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-09T13:06:38.615Z'),\r\n  },\r\n];\r\n\r\nexport class AdvanceTableService implements IAdvanceTableDataService<IID> {\r\n  search$ = new BehaviorSubject<string>('');\r\n  page$ = new BehaviorSubject<PageEvent | null>(null);\r\n  sort$ = new BehaviorSubject<Sort | null>(null);\r\n\r\n  entities$: Observable<IID[]> = combineLatest([\r\n    this.search$,\r\n    this.page$,\r\n    this.sort$,\r\n  ]).pipe(\r\n    debounceTime(600),\r\n    map(([search, page, sort]) => {\r\n      const { pageIndex, pageSize } = page ?? {};\r\n      const { active, direction } = sort ?? {};\r\n\r\n      console.table({\r\n        pageIndex,\r\n        pageSize,\r\n        active,\r\n        direction,\r\n      });\r\n\r\n      return data\r\n        .filter((entity) => {\r\n          if (entity && search) {\r\n            const searchEach = (item: any, p: any) =>\r\n              item[p]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(search?.toLowerCase().trim());\r\n\r\n            return Object.keys(entity)\r\n              .map((key) => {\r\n                return searchEach(entity, key);\r\n              })\r\n              .reduce((p, k) => p || k);\r\n          }\r\n\r\n          return true;\r\n        })\r\n        .sort((a, b) => {\r\n          if (active) {\r\n            const result =\r\n              (a as any)[active] < (b as any)[active]\r\n                ? -1\r\n                : (a as any)[active] > (b as any)[active]\r\n                ? 1\r\n                : 0;\r\n\r\n            return direction === 'asc' ? result : result * -1;\r\n          }\r\n          return 1;\r\n        })\r\n        .slice(\r\n          (pageIndex ?? 0) * (pageSize ?? 0),\r\n          (pageIndex ?? 0) * (pageSize ?? 0) + (pageSize ?? 10)\r\n        );\r\n    })\r\n  );\r\n\r\n  countAll$: Observable<number> = of(data.length);\r\n\r\n  advanceQuery(search: string, page: PageEvent, sort: Sort) {\r\n    this.search$.next(search);\r\n    this.page$.next(page);\r\n    this.sort$.next(sort);\r\n    return this.entities$;\r\n  }\r\n}\r\n",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "countAll$",
                    "defaultValue": "of(data.length)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 197
                },
                {
                    "name": "entities$",
                    "defaultValue": "combineLatest([\r\n    this.search$,\r\n    this.page$,\r\n    this.sort$,\r\n  ]).pipe(\r\n    debounceTime(600),\r\n    map(([search, page, sort]) => {\r\n      const { pageIndex, pageSize } = page ?? {};\r\n      const { active, direction } = sort ?? {};\r\n\r\n      console.table({\r\n        pageIndex,\r\n        pageSize,\r\n        active,\r\n        direction,\r\n      });\r\n\r\n      return data\r\n        .filter((entity) => {\r\n          if (entity && search) {\r\n            const searchEach = (item: any, p: any) =>\r\n              item[p]\r\n                ?.toString()\r\n                .toLowerCase()\r\n                .includes(search?.toLowerCase().trim());\r\n\r\n            return Object.keys(entity)\r\n              .map((key) => {\r\n                return searchEach(entity, key);\r\n              })\r\n              .reduce((p, k) => p || k);\r\n          }\r\n\r\n          return true;\r\n        })\r\n        .sort((a, b) => {\r\n          if (active) {\r\n            const result =\r\n              (a as any)[active] < (b as any)[active]\r\n                ? -1\r\n                : (a as any)[active] > (b as any)[active]\r\n                ? 1\r\n                : 0;\r\n\r\n            return direction === 'asc' ? result : result * -1;\r\n          }\r\n          return 1;\r\n        })\r\n        .slice(\r\n          (pageIndex ?? 0) * (pageSize ?? 0),\r\n          (pageIndex ?? 0) * (pageSize ?? 0) + (pageSize ?? 10)\r\n        );\r\n    })\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IID[]>",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "page$",
                    "defaultValue": "new BehaviorSubject<PageEvent | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "search$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "sort$",
                    "defaultValue": "new BehaviorSubject<Sort | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 140
                }
            ],
            "methods": [
                {
                    "name": "advanceQuery",
                    "args": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<{}>",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "search",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "page",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sort",
                            "type": "Sort",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAdvanceTableDataService"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdvanceTableComponent",
            "id": "component-AdvanceTableComponent-968aaffeeb473c31ca23330f941ce370929dde05c5ca34d9d10eee9aebe820319ed90585ee6ca9689c544397c4f33e01c6f50d690a7afacd1a1825dcb1b7c012",
            "file": "libs/material/table/src/lib/advance-table/advance-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-advance-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./advance-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "changeEvent",
                    "defaultValue": "new EventEmitter<{\n    search: string;\n    page: PageEvent;\n    sort: Sort;\n  }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "count$",
                    "defaultValue": "this.service.metadata$.pipe(\n    map((meta) => {\n      return meta.count;\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "data$",
                    "defaultValue": "combineLatest([this.search$, this.page$, this.sort$]).pipe(\n    debounceTime(600),\n    switchMap(([search, page, sort]) => {\n      this.changeEvent.emit({\n        search,\n        page,\n        sort,\n      });\n      return this.service.advanceQuery(search, page, sort);\n    })\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdvanceTableOptions<T>",
                    "optional": false,
                    "description": "",
                    "line": 104,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "ADVANCE_TABLE_OPTIONS_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "page$",
                    "defaultValue": "new BehaviorSubject<PageEvent>({\n    length: 0,\n    pageIndex: 0,\n    pageSize: 4,\n    previousPageIndex: 0,\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "paginatorRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'paginatorRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "search$",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "selectedItemIds",
                    "defaultValue": "new Set<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionBaseService<T>",
                    "optional": false,
                    "description": "",
                    "line": 106,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "ADVANCE_TABLE_DATA_SERVICE_TOKEN"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125,
                        148
                    ]
                },
                {
                    "name": "sort$",
                    "defaultValue": "new BehaviorSubject<Sort>({ active: 'id', direction: 'asc' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "tableRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<T>",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'tableRef'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "__columnNames",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "__columns",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "__displayColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "__displayedColumnNames",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "columnNames",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "displayedColumnNames",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isSelected",
                    "args": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isSomeSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openItemEditor",
                    "args": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "pageChangeHandler",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Inject,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ADVANCE_TABLE_DATA_SERVICE_TOKEN,\n  ADVANCE_TABLE_OPTIONS_TOKEN,\n} from './advance-table.providers';\nimport { IID } from '@mdtx/common';\nimport { AdvanceTableOptions } from './advance-table.types';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTable, MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  debounceTime,\n  map,\n  switchMap,\n} from 'rxjs';\nimport {\n  MatPaginator,\n  MatPaginatorModule,\n  PageEvent,\n} from '@angular/material/paginator';\nimport { MatSortModule, Sort } from '@angular/material/sort';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CollectionBaseService } from '@mdtx/ngrx';\n\nexport type QueryType = {\n  search: string;\n  page: PageEvent;\n  sort: Sort;\n};\n@Component({\n  selector: 'mdtx-advance-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatPaginatorModule,\n    MatSortModule,\n  ],\n  templateUrl: './advance-table.component.html',\n  styleUrl: './advance-table.component.scss',\n})\nexport class AdvanceTableComponent<T extends IID = IID> {\n  selectedItemIds = new Set<number>();\n  @ViewChild('tableRef') tableRef!: MatTable<T>;\n  @ViewChild('paginatorRef') paginatorRef!: MatPaginator;\n\n  search$ = new BehaviorSubject<string>('');\n\n  page$ = new BehaviorSubject<PageEvent>({\n    length: 0,\n    pageIndex: 0,\n    pageSize: 4,\n    previousPageIndex: 0,\n  });\n\n  count$ = this.service.metadata$.pipe(\n    map((meta) => {\n      return meta.count;\n    })\n  );\n\n  sort$ = new BehaviorSubject<Sort>({ active: 'id', direction: 'asc' });\n\n  data$ = combineLatest([this.search$, this.page$, this.sort$]).pipe(\n    debounceTime(600),\n    switchMap(([search, page, sort]) => {\n      this.changeEvent.emit({\n        search,\n        page,\n        sort,\n      });\n      return this.service.advanceQuery(search, page, sort);\n    })\n  );\n\n  @Output() changeEvent = new EventEmitter<{\n    search: string;\n    page: PageEvent;\n    sort: Sort;\n  }>();\n\n  constructor(\n    @Inject(ADVANCE_TABLE_OPTIONS_TOKEN)\n    public readonly options: AdvanceTableOptions<T>,\n    @Inject(ADVANCE_TABLE_DATA_SERVICE_TOKEN)\n    public readonly service: CollectionBaseService<T>,\n    public readonly router: Router,\n    public readonly route: ActivatedRoute\n  ) {}\n\n  __columns() {\n    return this.options.columns;\n  }\n  __displayColumns() {\n    return this.options.displayColumns;\n  }\n\n  __columnNames() {\n    return [...this.options.columns.map((e) => e.name)];\n  }\n\n  __displayedColumnNames() {\n    return this.options.displayColumns.map((e) => e.name);\n  }\n\n  columnNames() {\n    return ['__firstColumn', ...this.__columnNames()];\n  }\n\n  displayedColumnNames() {\n    return ['__firstColumn', ...this.__displayedColumnNames()];\n  }\n\n  pageChangeHandler(event: PageEvent) {\n    this.page$.next(event);\n  }\n\n  isAllSelected() {\n    return false;\n  }\n\n  isSomeSelected() {\n    return false;\n  }\n\n  isSelected(row: T) {\n    return this.selectedItemIds.has(row.id);\n  }\n\n  select(row: T) {\n    this.selectedItemIds.add(row.id);\n  }\n\n  openItemEditor(row: T) {\n    this.router.navigate(['..', 'update', row.id], { relativeTo: this.route });\n  }\n}\n",
            "styleUrl": "./advance-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "options",
                        "type": "AdvanceTableOptions<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "CollectionBaseService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 100,
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "AdvanceTableOptions<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "CollectionBaseService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"table-container\">\n  <mat-form-field appearance=\"fill\">\n    <input\n      type=\"search\"\n      #searchInput=\"ngModel\"\n      ngModel\n      matInput\n      placeholder=\"Search\"\n      autocomplete=\"off\"\n      (input)=\"search$.next(searchInput.value)\"\n    />\n  </mat-form-field>\n\n  <mat-table\n    #tableRef\n    *ngIf=\"data$ | async as data\"\n    [dataSource]=\"data\"\n    matSort\n    matSortActive=\"created\"\n    matSortDisableClear\n    matSortDirection=\"desc\"\n    (matSortChange)=\"sort$.next($event)\"\n  >\n    <ng-container matColumnDef=\"__firstColumn\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <button\n          class=\"open-in-new-button\"\n          mat-icon-button\n          (click)=\"openItemEditor(row)\"\n          color=\"primary\"\n        >\n          <mat-icon>open_in_new</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    @for(c of __columns(); track c){\n    <ng-container [matColumnDef]=\"c.name.toString()\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n        {{ c.label || c.name.toString() || '' | titlecase }}\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        {{ c.displayValue ? c.displayValue(row) : row[c.name] }}\n      </mat-cell>\n    </ng-container>\n    }\n\n    <mat-header-row *matHeaderRowDef=\"columnNames()\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumnNames()\"></mat-row>\n  </mat-table>\n\n  <mat-paginator\n    #paginatorRef\n    [length]=\"count$ | async\"\n    [pageIndex]=\"0\"\n    [pageSize]=\"4\"\n    [pageSizeOptions]=\"[4, 8, 12, 16, 20]\"\n    (page)=\"page$.next($event)\"\n  ></mat-paginator>\n</div>\n"
        },
        {
            "name": "SampleAdvanceTableComponent",
            "id": "component-SampleAdvanceTableComponent-06964d5473c4c64b08a710805cdced760ce54f420c279e37099f88aba30e4aa30caf8722a19c817cf5af0708fef7ce4f27b9a38a92d8b832b0d077960c5e4504",
            "file": "libs/material/table/src/lib/sample-advance-table/sample-advance-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sample-advance-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sample-advance-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'mdtx-sample-advance-table',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sample-advance-table.component.html',\n  styleUrl: './sample-advance-table.component.scss',\n})\nexport class SampleAdvanceTableComponent {}\n",
            "styleUrl": "./sample-advance-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>sample-advance-table works!</p>\n"
        },
        {
            "name": "SampleTableComponent",
            "id": "component-SampleTableComponent-2bd1b681e48ce89b75ef9868b3941acb64238a2fa11f418078a9034b439776e4d5ae140a1740b581cbdac8358451979262bd9c9c56407d1cfd1b6404f33531d1",
            "file": "libs/material/table/src/lib/sample-table/sample-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sample-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sample-table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[\r\n    { id: 1, name: 'data 1', read: false },\r\n    { id: 2, name: 'data 2', read: true },\r\n    { id: 3, name: 'data 3', read: true },\r\n    { id: 4, name: 'data 4', read: false },\r\n    { id: 5, name: 'data 5', read: false },\r\n    { id: 6, name: 'data 6', read: false },\r\n    { id: 7, name: 'data 7', read: false },\r\n    { id: 8, name: 'data 8', read: false },\r\n    { id: 9, name: 'data 9', read: false },\r\n    { id: 10, name: 'data 10', read: false },\r\n    { id: 11, name: 'data 11', read: false },\r\n    { id: 12, name: 'data 12', read: false },\r\n    { id: 13, name: 'data 13', read: false },\r\n    { id: 14, name: 'data 14', read: false },\r\n    { id: 15, name: 'data 15', read: false },\r\n    { id: 16, name: 'data 16', read: false },\r\n    { id: 17, name: 'data 17', read: false },\r\n    { id: 18, name: 'data 18', read: false },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "filteredData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "paginator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatPaginator",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatPaginator"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "searchControl",
                    "defaultValue": "new FormControl('', [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteSelection",
                    "args": [
                        {
                            "name": "items",
                            "type": "Map<number | any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "Map<number | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterData",
                    "args": [
                        {
                            "name": "search",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "search",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "markAllRead",
                    "args": [
                        {
                            "name": "items",
                            "type": "Map<number | any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "Map<number | any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "paginateData",
                    "args": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "TableComponent",
                    "type": "component"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "MatPaginatorModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ViewChild } from '@angular/core';\r\n\r\nimport { TableComponent } from '../table/table.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputTextComponent } from '@mdtx/material/form';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, debounceTime, map, merge, startWith } from 'rxjs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'mdtx-sample-table',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    TableComponent,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    InputTextComponent,\r\n    MatPaginatorModule,\r\n  ],\r\n  templateUrl: './sample-table.component.html',\r\n  styleUrl: './sample-table.component.scss',\r\n})\r\nexport class SampleTableComponent implements AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n\r\n  searchControl = new FormControl('', []);\r\n\r\n  data = [\r\n    { id: 1, name: 'data 1', read: false },\r\n    { id: 2, name: 'data 2', read: true },\r\n    { id: 3, name: 'data 3', read: true },\r\n    { id: 4, name: 'data 4', read: false },\r\n    { id: 5, name: 'data 5', read: false },\r\n    { id: 6, name: 'data 6', read: false },\r\n    { id: 7, name: 'data 7', read: false },\r\n    { id: 8, name: 'data 8', read: false },\r\n    { id: 9, name: 'data 9', read: false },\r\n    { id: 10, name: 'data 10', read: false },\r\n    { id: 11, name: 'data 11', read: false },\r\n    { id: 12, name: 'data 12', read: false },\r\n    { id: 13, name: 'data 13', read: false },\r\n    { id: 14, name: 'data 14', read: false },\r\n    { id: 15, name: 'data 15', read: false },\r\n    { id: 16, name: 'data 16', read: false },\r\n    { id: 17, name: 'data 17', read: false },\r\n    { id: 18, name: 'data 18', read: false },\r\n  ];\r\n\r\n  filteredData!: Observable<{ id: number; name: string }[]>;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.filteredData = merge(\r\n      this.searchControl.valueChanges,\r\n      this.paginator.page\r\n    ).pipe(\r\n      debounceTime(600),\r\n      startWith(''),\r\n      map(() => {\r\n        return this.filterData(this.searchControl.value);\r\n      }),\r\n      map((data) => {\r\n        return this.paginateData(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteSelection(items: Map<number, any>) {\r\n    for (const [key] of items) {\r\n      if (key) {\r\n        this.data = this.data.filter((e) => e.id != key);\r\n      }\r\n    }\r\n    this.searchControl.setValue('');\r\n  }\r\n\r\n  markAllRead(items: Map<number, any>) {\r\n    for (const [key] of items) {\r\n      if (key) {\r\n        this.data.filter((e) => e.id == key).map((e) => (e.read = true));\r\n      }\r\n    }\r\n  }\r\n\r\n  paginateData(data: any[]) {\r\n    const pageSize = this.paginator.pageSize;\r\n    const pageIndex = this.paginator.pageIndex;\r\n\r\n    if (this.paginator) {\r\n      return data.slice(pageIndex * pageSize, pageIndex * pageSize + pageSize);\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  filterData(search?: string | null) {\r\n    if (search) {\r\n      return this.data.filter((e) =>\r\n        e.name.toLowerCase().includes(search?.toLowerCase())\r\n      );\r\n    }\r\n    return this.data;\r\n  }\r\n}\r\n",
            "styleUrl": "./sample-table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<mat-toolbar>\r\n  <div style=\"display: flex; gap: 1em\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"deleteSelection(table.selectedItems)\"\r\n    >\r\n      Delete Selection\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"markAllRead(table.selectedItems)\"\r\n    >\r\n      Mark All Read\r\n    </button>\r\n  </div>\r\n  <div style=\"flex-grow: 1\"></div>\r\n  <mdtx-input-text #search [inputControl]=\"searchControl\" prefixIcon=\"search\">\r\n  </mdtx-input-text>\r\n</mat-toolbar>\r\n\r\n<div style=\"max-height: 400px; overflow: auto\">\r\n  <mdtx-table\r\n    #table\r\n    [dataSource]=\"(filteredData | async)!\"\r\n    [columns]=\"['id', 'name', 'read']\"\r\n    [displayedColumns]=\"['id', 'name', 'read']\"\r\n    conditionalColumn=\"read\"\r\n  ></mdtx-table>\r\n  <mat-paginator\r\n    #paginator\r\n    style=\"position: sticky; bottom: 0px\"\r\n    [pageSizeOptions]=\"[2, 5, 7, 10, 12, 20]\"\r\n    [length]=\"data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"2\"\r\n    [showFirstLastButtons]=\"true\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-d897c01e759dc0f2038de7635f1f7e3ca1db0d712595c78a1d61b16f5c6687ab4b6d3d09fa7bcd950d5c427e20f4f405c1e641a07fc04233c19d80822a641fe0",
            "file": "libs/material/table/src/lib/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "TableRow<T>[]",
                    "decorators": []
                },
                {
                    "name": "conditionalColumn",
                    "defaultValue": "'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "TableRow<T>[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectionChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "firstColumns",
                    "defaultValue": "[\r\n    { name: 'first' },\r\n    { name: 'second' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableRow<any>[]",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "lastColumns",
                    "defaultValue": "[{ name: 'last' }]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TableRow<any>[]",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "selectedItems",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "colMetCondition",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "colNotMetContion",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDisplayedColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isAllSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isPartialSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectAll",
                    "args": [
                        {
                            "name": "event",
                            "type": "Partial<MatCheckboxChange>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Partial<MatCheckboxChange>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectItem",
                    "args": [
                        {
                            "name": "event",
                            "type": "Partial<MatCheckboxChange>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Partial<MatCheckboxChange>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatSortModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatCheckboxModule",
                    "type": "module"
                },
                {
                    "name": "MatTableModule",
                    "type": "module"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {\r\n  MatCheckboxChange,\r\n  MatCheckboxModule,\r\n} from '@angular/material/checkbox';\r\n\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { slideInDownOnEnterAnimation } from 'angular-animations';\r\nimport { TableRow } from '../common';\r\n@Component({\r\n  selector: 'mdtx-table',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatSortModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatCheckboxModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n  ],\r\n  templateUrl: './table.component.html',\r\n  styleUrl: './table.component.scss',\r\n  animations: [\r\n    slideInDownOnEnterAnimation({\r\n      anchor: 'enter',\r\n      duration: 500,\r\n      delay: 400,\r\n      animateChildren: 'after',\r\n    }),\r\n  ],\r\n})\r\nexport class TableComponent<T extends Record<string, any> = any>\r\n  implements OnInit\r\n{\r\n  readonly firstColumns: TableRow<any>[] = [\r\n    { name: 'first' },\r\n    { name: 'second' },\r\n  ];\r\n  readonly lastColumns: TableRow<any>[] = [{ name: 'last' }];\r\n  readonly selectedItems = new Map();\r\n\r\n  @Input() columns!: TableRow<T>[];\r\n  @Input() displayedColumns!: TableRow<T>[];\r\n  @Input() dataSource!: any[];\r\n  @Input() conditionalColumn = 'id';\r\n  @Output() selectionChange = new EventEmitter();\r\n\r\n  ngOnInit(): void {\r\n    if (this.columns) {\r\n      if (!this.displayedColumns) {\r\n        this.displayedColumns = [\r\n          ...this.firstColumns,\r\n          ...this.columns,\r\n          ...this.lastColumns,\r\n        ];\r\n      } else {\r\n        this.displayedColumns = [\r\n          ...this.firstColumns,\r\n          ...this.displayedColumns,\r\n          ...this.lastColumns,\r\n        ];\r\n      }\r\n    }\r\n\r\n    if (!this.dataSource) {\r\n      this.dataSource = [];\r\n    }\r\n  }\r\n\r\n  selectItem(event: Partial<MatCheckboxChange>, item: any) {\r\n    if (event.checked) {\r\n      this.selectedItems.set(item.id, item);\r\n    } else {\r\n      this.selectedItems.delete(item.id);\r\n    }\r\n    this.selectionChange.emit(this.selectedItems);\r\n  }\r\n\r\n  selectAll(event: Partial<MatCheckboxChange>) {\r\n    if (event.checked) {\r\n      this.dataSource.forEach((e) => {\r\n        this.selectItem(event, e);\r\n      });\r\n    } else {\r\n      this.dataSource.forEach((e) => {\r\n        this.selectItem(event, e);\r\n      });\r\n    }\r\n    this.selectionChange.emit(this.selectedItems);\r\n  }\r\n\r\n  isAllSelected() {\r\n    for (const a of this.dataSource) {\r\n      if (!this.selectedItems.get(a.id)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isPartialSelected() {\r\n    if (this.isAllSelected()) {\r\n      return false;\r\n    }\r\n\r\n    return this.selectedItems.size > 0;\r\n  }\r\n\r\n  colMetCondition(row: any) {\r\n    return row[this.conditionalColumn] == true;\r\n  }\r\n\r\n  colNotMetContion(row: any) {\r\n    return row[this.conditionalColumn] == false;\r\n  }\r\n\r\n  getDisplayedColumns() {\r\n    return this.displayedColumns.map((e) => e.name);\r\n  }\r\n}\r\n",
            "styleUrl": "./table.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"table-container\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <!-- first Column -->\r\n    <ng-container matColumnDef=\"first\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let row\"></td>\r\n    </ng-container>\r\n    <!-- First column ends -->\r\n\r\n    <!-- Second column -->\r\n    <ng-container matColumnDef=\"second\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <mat-checkbox\r\n          [checked]=\"isAllSelected()\"\r\n          [indeterminate]=\"isPartialSelected()\"\r\n          (change)=\"selectAll($event)\"\r\n          [attr.data-testid]=\"'select-all'\"\r\n        ></mat-checkbox>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <mat-checkbox\r\n          [checked]=\"selectedItems.get(row.id)\"\r\n          (change)=\"selectItem($event, row)\"\r\n          [attr.data-testid]=\"'select-' + row.id\"\r\n        ></mat-checkbox>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <!-- Columns -->\r\n    @for(col of columns; track col){\r\n    <ng-container [matColumnDef]=\"col.name\">\r\n      <th mat-header-cell *matHeaderCellDef>{{ col.label || col.name }}</th>\r\n      <td\r\n        mat-cell\r\n        *matCellDef=\"let row\"\r\n        [class.condition-not-met]=\"colNotMetContion(row)\"\r\n        [@enter]\r\n      >\r\n        {{ col.prefix || '' }} {{ col.map ? col.map(row) : row[col.name] }}\r\n        {{ col.suffix || '' }}\r\n      </td>\r\n    </ng-container>\r\n    }\r\n\r\n    <!-- Last column -->\r\n    <ng-container matColumnDef=\"last\">\r\n      <th mat-header-cell *matHeaderCellDef></th>\r\n      <td mat-cell *matCellDef=\"let row\"></td>\r\n    </ng-container>\r\n\r\n    <!-- Headers -->\r\n    <tr\r\n      mat-header-row\r\n      *matHeaderRowDef=\"getDisplayedColumns(); sticky: true\"\r\n    ></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: getDisplayedColumns()\"></tr>\r\n  </table>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "ADVANCE_TABLE_BULK_ACTIONS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_BULK_ACTIONS_TOKEN'\r\n)"
            },
            {
                "name": "ADVANCE_TABLE_COLUMNS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_COLUMNS_TOKEN'\r\n)"
            },
            {
                "name": "ADVANCE_TABLE_DATA_SERVICE_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_DATA_SERVICE_TOKEN'\r\n)"
            },
            {
                "name": "ADVANCE_TABLE_OPTIONS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_OPTIONS_TOKEN'\r\n)"
            },
            {
                "name": "ADVANCE_TABLE_ROW_ACTIONS_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_ROW_ACTIONS_TOKEN'\r\n)"
            },
            {
                "name": "data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: \"John's Object 1\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-03-01T11:26:07.723Z'),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Alice's Object 2\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-09T15:36:32.423Z'),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Bob's Object 3\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-07-21T05:47:03.519Z'),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Emma's Object 4\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-17T10:02:12.822Z'),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Oliver's Object 5\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-08-27T18:14:09.051Z'),\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sophia's Object 6\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-19T19:40:49.333Z'),\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"James's Object 7\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-11-27T17:52:16.028Z'),\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Mia's Object 8\",\r\n    category: 'B40',\r\n    createdAt: new Date('2023-02-03T09:32:01.867Z'),\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"William's Object 9\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-04-27T07:28:22.381Z'),\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Charlotte's Object 10\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-01-11T20:02:19.622Z'),\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"John's Object 11\",\r\n    category: 'B30',\r\n    createdAt: new Date('2023-01-20T07:55:47.206Z'),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Alice's Object 12\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-06-22T04:16:23.102Z'),\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Bob's Object 13\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-05-02T17:09:14.341Z'),\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Emma's Object 14\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-10-05T08:42:58.009Z'),\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Oliver's Object 15\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-12-30T23:45:37.193Z'),\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Sophia's Object 16\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-09-14T05:32:12.625Z'),\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"James's Object 17\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-03-25T14:09:08.914Z'),\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Mia's Object 18\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-11-16T16:24:52.287Z'),\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"William's Object 19\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-05-29T11:38:49.932Z'),\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Charlotte's Object 20\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-09T13:06:38.615Z'),\r\n  },\r\n]"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: Primary.args,\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n  },\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AdvanceTableComponent>",
                "defaultValue": "{\n  component: AdvanceTableComponent,\n  title: 'AdvanceTableComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        provideAnimations(),\n        provideAdvanceTableOptions({\n          columns: [{ name: 'id' }, { name: 'name' }, { name: 'category' }],\n          displayColumns: [\n            { name: 'id', label: '#' },\n            { name: 'name', label: 'name' },\n            { name: 'category', label: 'category' },\n          ],\n          bulkActions: [],\n          rowActions: [],\n        }),\n        provideAdvanceTableDataService(ProductService),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SampleTableComponent>",
                "defaultValue": "{\r\n  component: SampleTableComponent,\r\n  title: 'SampleTableComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [provideAnimations()],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [provideAnimations()],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {},\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { name: 'id' },\r\n      { name: 'name' },\r\n      { name: 'category', map: (e) => e.category.name },\r\n    ],\r\n    displayedColumns: [\r\n      { name: 'id' },\r\n      { name: 'name' },\r\n      { name: 'category', map: (e) => e.category.name },\r\n    ],\r\n    dataSource: [\r\n      { id: 1, name: 'item 1', category: { name: 'Cat 1' } },\r\n      { id: 2, name: 'item 2', category: { name: 'Cat 2' } },\r\n      { id: 3, name: 'item 3', category: { name: 'Cat 3' } },\r\n      { id: 4, name: 'item 4', category: { name: 'Cat 4' } },\r\n      { id: 5, name: 'item 5', category: { name: 'Cat 5' } },\r\n      { id: 6, name: 'item 6', category: { name: 'Cat 6' } },\r\n      { id: 7, name: 'item 7', category: { name: 'Cat 7' } },\r\n      { id: 8, name: 'item 8', category: { name: 'Cat 8' } },\r\n      { id: 9, name: 'item 9', category: { name: 'Cat 9' } },\r\n      { id: 10, name: 'item 10', category: { name: 'Cat 10' } },\r\n    ],\r\n  },\r\n}"
            }
        ],
        "functions": [
            {
                "name": "provideAdvanceTableBulkActions",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAdvanceTableColumns",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAdvanceTableDataService",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "useClass",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "useClass",
                        "type": "Type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAdvanceTableOptions",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "useValue",
                        "type": "AdvanceTableOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "useValue",
                        "type": "AdvanceTableOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "provideAdvanceTableRowActions",
                "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Provider",
                "jsdoctags": [
                    {
                        "name": "useValue",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AdvanceTableBulkAction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "AdvanceTableColumn",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "AdvanceTableOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "AdvanceTableRowAction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "QueryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/advance-table/advance-table.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AdvanceTableComponent>",
                "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SampleTableComponent>",
                "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "TableRow",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "libs/material/table/src/lib/common/table-row.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/material/table/src/lib/advance-table/advance-table.providers.ts": [
                {
                    "name": "ADVANCE_TABLE_BULK_ACTIONS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_BULK_ACTIONS_TOKEN'\r\n)"
                },
                {
                    "name": "ADVANCE_TABLE_COLUMNS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_COLUMNS_TOKEN'\r\n)"
                },
                {
                    "name": "ADVANCE_TABLE_DATA_SERVICE_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_DATA_SERVICE_TOKEN'\r\n)"
                },
                {
                    "name": "ADVANCE_TABLE_OPTIONS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_OPTIONS_TOKEN'\r\n)"
                },
                {
                    "name": "ADVANCE_TABLE_ROW_ACTIONS_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\r\n  'ADVANCE_TABLE_ROW_ACTIONS_TOKEN'\r\n)"
                }
            ],
            "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts": [
                {
                    "name": "data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: \"John's Object 1\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-03-01T11:26:07.723Z'),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Alice's Object 2\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-09T15:36:32.423Z'),\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Bob's Object 3\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-07-21T05:47:03.519Z'),\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Emma's Object 4\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-17T10:02:12.822Z'),\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Oliver's Object 5\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-08-27T18:14:09.051Z'),\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Sophia's Object 6\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-03-19T19:40:49.333Z'),\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"James's Object 7\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-11-27T17:52:16.028Z'),\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Mia's Object 8\",\r\n    category: 'B40',\r\n    createdAt: new Date('2023-02-03T09:32:01.867Z'),\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"William's Object 9\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-04-27T07:28:22.381Z'),\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Charlotte's Object 10\",\r\n    category: 'B20',\r\n    createdAt: new Date('2023-01-11T20:02:19.622Z'),\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"John's Object 11\",\r\n    category: 'B30',\r\n    createdAt: new Date('2023-01-20T07:55:47.206Z'),\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Alice's Object 12\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-06-22T04:16:23.102Z'),\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"Bob's Object 13\",\r\n    category: 'B10',\r\n    createdAt: new Date('2022-05-02T17:09:14.341Z'),\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Emma's Object 14\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-10-05T08:42:58.009Z'),\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"Oliver's Object 15\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-12-30T23:45:37.193Z'),\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Sophia's Object 16\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-09-14T05:32:12.625Z'),\r\n  },\r\n  {\r\n    id: 17,\r\n    name: \"James's Object 17\",\r\n    category: 'B10',\r\n    createdAt: new Date('2023-03-25T14:09:08.914Z'),\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Mia's Object 18\",\r\n    category: 'B20',\r\n    createdAt: new Date('2022-11-16T16:24:52.287Z'),\r\n  },\r\n  {\r\n    id: 19,\r\n    name: \"William's Object 19\",\r\n    category: 'B30',\r\n    createdAt: new Date('2022-05-29T11:38:49.932Z'),\r\n  },\r\n  {\r\n    id: 20,\r\n    name: \"Charlotte's Object 20\",\r\n    category: 'B40',\r\n    createdAt: new Date('2022-10-09T13:06:38.615Z'),\r\n  },\r\n]"
                }
            ],
            "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AdvanceTableComponent>",
                    "defaultValue": "{\n  component: AdvanceTableComponent,\n  title: 'AdvanceTableComponent',\n\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideRouter([]),\n        provideAnimations(),\n        provideAdvanceTableOptions({\n          columns: [{ name: 'id' }, { name: 'name' }, { name: 'category' }],\n          displayColumns: [\n            { name: 'id', label: '#' },\n            { name: 'name', label: 'name' },\n            { name: 'category', label: 'category' },\n          ],\n          bulkActions: [],\n          rowActions: [],\n        }),\n        provideAdvanceTableDataService(ProductService),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SampleTableComponent>",
                    "defaultValue": "{\r\n  component: SampleTableComponent,\r\n  title: 'SampleTableComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [provideAnimations()],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {},\r\n}"
                }
            ],
            "libs/material/table/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: Primary.args,\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n  component: TableComponent,\r\n  title: 'TableComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [provideAnimations()],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    columns: [\r\n      { name: 'id' },\r\n      { name: 'name' },\r\n      { name: 'category', map: (e) => e.category.name },\r\n    ],\r\n    displayedColumns: [\r\n      { name: 'id' },\r\n      { name: 'name' },\r\n      { name: 'category', map: (e) => e.category.name },\r\n    ],\r\n    dataSource: [\r\n      { id: 1, name: 'item 1', category: { name: 'Cat 1' } },\r\n      { id: 2, name: 'item 2', category: { name: 'Cat 2' } },\r\n      { id: 3, name: 'item 3', category: { name: 'Cat 3' } },\r\n      { id: 4, name: 'item 4', category: { name: 'Cat 4' } },\r\n      { id: 5, name: 'item 5', category: { name: 'Cat 5' } },\r\n      { id: 6, name: 'item 6', category: { name: 'Cat 6' } },\r\n      { id: 7, name: 'item 7', category: { name: 'Cat 7' } },\r\n      { id: 8, name: 'item 8', category: { name: 'Cat 8' } },\r\n      { id: 9, name: 'item 9', category: { name: 'Cat 9' } },\r\n      { id: 10, name: 'item 10', category: { name: 'Cat 10' } },\r\n    ],\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "libs/material/table/src/lib/advance-table/advance-table.providers.ts": [
                {
                    "name": "provideAdvanceTableBulkActions",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideAdvanceTableColumns",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideAdvanceTableDataService",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "useClass",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "useClass",
                            "type": "Type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideAdvanceTableOptions",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "useValue",
                            "type": "AdvanceTableOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "useValue",
                            "type": "AdvanceTableOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "provideAdvanceTableRowActions",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Provider",
                    "jsdoctags": [
                        {
                            "name": "useValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/material/table/src/lib/advance-table/advance-table.types.ts": [
                {
                    "name": "AdvanceTableBulkAction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "AdvanceTableColumn",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "AdvanceTableOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "AdvanceTableRowAction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/table/src/lib/advance-table/advance-table.component.ts": [
                {
                    "name": "QueryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AdvanceTableComponent>",
                    "file": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SampleTableComponent>",
                    "file": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/table/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/material/table/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/material/table/src/lib/common/table-row.ts": [
                {
                    "name": "TableRow",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "libs/material/table/src/lib/common/table-row.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table-data.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAdvanceTableDataService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdvanceTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAdvanceTableBulkActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAdvanceTableColumns",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAdvanceTableDataService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAdvanceTableOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "provideAdvanceTableRowActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADVANCE_TABLE_BULK_ACTIONS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADVANCE_TABLE_COLUMNS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADVANCE_TABLE_DATA_SERVICE_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADVANCE_TABLE_OPTIONS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/advance-table.providers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADVANCE_TABLE_ROW_ACTIONS_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AdvanceTableService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/advance-table/demo-advance-table.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/sample-advance-table/sample-advance-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleAdvanceTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/sample-table/sample-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/sample-table/sample-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SampleTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/material/table/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            }
        ]
    }
}