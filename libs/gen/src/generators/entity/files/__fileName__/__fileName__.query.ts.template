/* eslint-disable @typescript-eslint/no-explicit-any */
import {
  BasePaginatorQueryDto,
  SearchProperty,
  QueryOperatorProperty,
  BaseWhereQueryDto,
  OrderProperty,
  WhereProperty,
} from '@mdtx/core';
import { Exclude } from 'class-transformer';
import { <%- className %> } from './<%- fileName %>.entity';
import { FindOperator } from 'typeorm';
import { <%- className %>MetadataInstance } from './<%- fileName %>.metata';
import { AllPropertyType, IBaseEntity } from '@mdtx/common';
import { I<%- className %> } from '@mdtx/models';

@Exclude()
export class <%- className %>WhereQueryDto extends BaseWhereQueryDto<<%- className %>> 
implements AllPropertyType<Omit<I<%- className %>, keyof IBaseEntity>, FindOperator<string>>{
  @QueryOperatorProperty({ type: 'string' })
  name!: FindOperator<string>;
  
}

@Exclude()
export class <%- className %>QueryDto extends BasePaginatorQueryDto {
  @SearchProperty<<%- className %>>(['name'])
  search!: <%- className %>WhereQueryDto;

  @WhereProperty(<%- className %>WhereQueryDto)
  where!: <%- className %>WhereQueryDto;

  @OrderProperty<<%- className %>>(<%- className %>MetadataInstance.propertyNames())
  order: any;
}
