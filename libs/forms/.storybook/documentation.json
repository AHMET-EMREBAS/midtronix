{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddressFormComponent",
            "id": "component-AddressFormComponent-111aaae6ff6eb6259c794b0c47b759f36e02a7f4e64db7f44a41c7716a7f3769e6a87eaf68e51cdde2c6e00686d7ef3560ee981ec659810fb30ab1c42bbe425b",
            "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./address-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "submitLabel",
                    "defaultValue": "'Save Address'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../../__base';\r\nimport { AddressFormBuilder } from '../../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-address-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './address-form.component.html',\r\n  styleUrl: './address-form.component.scss',\r\n})\r\nexport class AddressFormComponent extends BaseFormComponent {\r\n  @Input() submitLabel = 'Save Address';\r\n\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...AddressFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./address-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"street\"\r\n    prefixIcon=\"streetview\"\r\n    [inputControl]=\"control('street')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"city\"\r\n    prefixIcon=\"location_city\"\r\n    [inputControl]=\"control('city')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"state\"\r\n    prefixIcon=\"location_home\"\r\n    [inputControl]=\"control('state')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"country\"\r\n    prefixIcon=\"flag\"\r\n    [inputControl]=\"control('country')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"zip\"\r\n    prefixIcon=\"local_post_office\"\r\n    [inputControl]=\"control('zip')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      {{ submitLabel }}\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "BaseFormComponent",
            "id": "component-BaseFormComponent-af042a04ee38d860ea131cd1df92637eba03d0bdb7bb929f511c3bd7d480c18311ab530dad43f0663d2a690427e4e144cfec62c5213314dd0636e3f1046910d6",
            "file": "libs/forms/src/lib/__base/base-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n"
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n"
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n"
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { FormComponent } from '@mdtx/material/form';\r\nimport { Observable, debounceTime } from 'rxjs';\r\n\r\n@Component({ template: '' })\r\nexport class BaseFormComponent implements FormComponent, AfterViewInit {\r\n  /**\r\n   * FormGroup\r\n   */\r\n  @Input() resourceFormGroup = this.createFormGroup();\r\n\r\n  /**\r\n   * Emits form value when form submit\r\n   */\r\n  @Output() submitEvent = new EventEmitter();\r\n\r\n  /**\r\n   * Subscribe form value change\r\n   */\r\n  valueChange$!: Observable<any>;\r\n\r\n  /**\r\n   * Subscribe form status change\r\n   */\r\n  statusChange$!: Observable<any>;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.valueChange$ = this.resourceFormGroup?.valueChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n    this.statusChange$ = this.resourceFormGroup?.statusChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submit form\r\n   */\r\n  formSubmit() {\r\n    console.log('Form is submitting: ', this.resourceFormGroup.value);\r\n    this.submitEvent.emit(this.resourceFormGroup.value);\r\n  }\r\n\r\n  /**\r\n   * Reset form\r\n   */\r\n  formReset() {\r\n    this.resourceFormGroup.reset();\r\n  }\r\n\r\n  /**\r\n   * Get the formControl from the formGroup\r\n   * @param name formControlName\r\n   * @returns\r\n   */\r\n  control(name: string) {\r\n    const formControl = this.resourceFormGroup.get(name) as FormControl;\r\n    if (!formControl) throw new Error(`${name} |  FormControl is not found!`);\r\n    return formControl;\r\n  }\r\n\r\n  createFormGroup(): FormGroup {\r\n    throw new Error('Not implemented!');\r\n  }\r\n\r\n  isFormInvalid() {\r\n    return this.resourceFormGroup.invalid;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "FormComponent",
                "AfterViewInit"
            ]
        },
        {
            "name": "BaseSearchComponent",
            "id": "component-BaseSearchComponent-9f8f0aaa3b9bcefff260c2db9c6109d1dcddc702a2c56b5c1fff8c3d409f545e029b34a351b9681173a3c15224970f7d792a196472864c8917830eb62210324f",
            "file": "libs/forms/src/lib/search-inputs/__base/base-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { IID } from '@mdtx/common';\r\nimport { CollectionBaseService } from '@mdtx/ngrx';\r\n\r\n@Component({ template: '' })\r\nexport class BaseSearchComponent<T extends IID> {\r\n  constructor(protected readonly service: CollectionBaseService<T>) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CollectionBaseService<T>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CollectionBaseService<T>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "CategoryFormComponent",
            "id": "component-CategoryFormComponent-11c9681cbf0b5265f9921dc7e95500f80781c38f6e94722ea4b0f0546e437f791cf412d4820cb4ba365779bdfd810aaa68cbd309918ccc3b423e93294612e4ff",
            "file": "libs/forms/src/lib/form-components/category/category-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-category-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./category-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { CategoryFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-category-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './category-form.component.html',\r\n  styleUrl: './category-form.component.scss',\r\n})\r\nexport class CategoryFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...CategoryFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./category-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"category\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Category\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "CategorySearchComponent",
            "id": "component-CategorySearchComponent-231b9c18a212b7d74efb165b3ef6b6316581c0a20153c16e9d13e4275cbec03efb473f5528040de94cfaa7fe580426cc1e6b33f1a77b2acda3ce707fa6121ed9",
            "file": "libs/forms/src/lib/search-inputs/category/category-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CategoryService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-category-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"category\"\n  label=\"Search Category\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { CategoryService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-category-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"category\"\r\n      label=\"Search Category\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [CategoryService],\r\n})\r\nexport class CategorySearchComponent {\r\n  constructor(protected readonly service: CategoryService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CategoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CategoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "CustomerAddressFormComponent",
            "id": "component-CustomerAddressFormComponent-a3efe43ab510ea9196d09b3e0688d80fad1c288657a9ede39d1d03ddcc4c36200f34fb9eade4560525f8b16bc3acce88954ce93b4134eedb19a539a06c5e28fa",
            "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-address-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AddressFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { CustomerAddressFormBuilder } from '../../form-builders';\r\nimport { AddressFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-address-form',\r\n  standalone: true,\r\n  imports: [AddressFormComponent],\r\n  templateUrl: './customer-address-form.component.html',\r\n  styleUrl: './customer-address-form.component.scss',\r\n})\r\nexport class CustomerAddressFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...CustomerAddressFormBuilder.controls(undefined),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./customer-address-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<mdtx-address-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-address-form>\r\n"
        },
        {
            "name": "CustomerAddressSearchComponent",
            "id": "component-CustomerAddressSearchComponent-ebb27068ddad908511542e618709b5ff4d320a4c680600c15e734a24bc0623cdd0673d16241abce6709a7ee46c77e2db331f660ac87b6c36ef1637fc510b9a14",
            "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CustomerAddressService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-customer-address-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"customer-address\"\n  label=\"Search CustomerAddress\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { CustomerAddressService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-address-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"customer-address\"\r\n      label=\"Search CustomerAddress\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [CustomerAddressService],\r\n})\r\nexport class CustomerAddressSearchComponent {\r\n  constructor(protected readonly service: CustomerAddressService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CustomerAddressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CustomerAddressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "CustomerEmailFormComponent",
            "id": "component-CustomerEmailFormComponent-863caba7af6a785bf0cb2bf865dc701bebe59abbef2092e079f87e1bcb708489e6647a264ce9f70cd6d73c7929379db8993bd5056aa51359eed29c3c179c52a1",
            "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-email-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-email-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "submitLabel",
                    "defaultValue": "'Save Email'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "EmailFormComponent"
                    }
                },
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "EmailFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CustomerEmailFormBuilder } from '../../form-builders';\r\nimport { EmailFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-email-form',\r\n  standalone: true,\r\n  imports: [EmailFormComponent],\r\n  templateUrl: './customer-email-form.component.html',\r\n  styleUrl: './customer-email-form.component.scss',\r\n})\r\nexport class CustomerEmailFormComponent extends EmailFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...CustomerEmailFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./customer-email-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "EmailFormComponent"
            ],
            "templateData": "<mdtx-email-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-email-form>\r\n"
        },
        {
            "name": "CustomerEmailSearchComponent",
            "id": "component-CustomerEmailSearchComponent-64e9e3e9e107dbc55345d8f9df3985b855b0d74cd87e579fe1efbf1c632bbb7f3a4e4c604886f593119d741acebab69acb4907c88089667560e7c3ac2541fa38",
            "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CustomerEmailService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-customer-email-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"customer-email\"\n  label=\"Search CustomerEmail\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { CustomerEmailService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-email-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"customer-email\"\r\n      label=\"Search CustomerEmail\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [CustomerEmailService],\r\n})\r\nexport class CustomerEmailSearchComponent {\r\n  constructor(protected readonly service: CustomerEmailService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CustomerEmailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CustomerEmailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "CustomerFormComponent",
            "id": "component-CustomerFormComponent-aaf1a453eb6af24597c2fe94c82d6eb2eb5594900df7e29ce67fcf103b03ac35b2e4b28c00572138f651ee3f2ae553cdb51f726af1515685823250ac6956f8a4",
            "file": "libs/forms/src/lib/form-components/customer/customer-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputUsernameComponent",
                    "type": "component"
                },
                {
                    "name": "InputPasswordComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputPasswordComponent,\r\n  InputTextComponent,\r\n  InputUsernameComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { CustomerFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonFormModule,\r\n    InputTextComponent,\r\n    InputUsernameComponent,\r\n    InputPasswordComponent,\r\n  ],\r\n  templateUrl: './customer-form.component.html',\r\n  styleUrl: './customer-form.component.scss',\r\n})\r\nexport class CustomerFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...CustomerFormBuilder.controls(undefined, ['supervisor', 'roles']),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./customer-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<!-- username\r\npassword-->\r\n\r\n<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-username\r\n    inputName=\"username\"\r\n    [inputControl]=\"control('username')\"\r\n  ></mdtx-input-username>\r\n  <mdtx-input-password\r\n    inputName=\"password\"\r\n    [inputControl]=\"control('password')\"\r\n  ></mdtx-input-password>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Customer\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "CustomerPhoneFormComponent",
            "id": "component-CustomerPhoneFormComponent-cb2a951738e63c2fa5f2013d77756a4468fedc92a462b0af9442faa260a94bae3c468c32dd3284666a0374da4a636e5d1ca715b2d650f42f9193287d0f5bf5a2",
            "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-phone-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PhoneFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CustomerPhoneFormBuilder } from '../../form-builders';\r\nimport { PhoneFormComponent } from '../__base/phone';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-phone-form',\r\n  standalone: true,\r\n  imports: [PhoneFormComponent],\r\n  templateUrl: './customer-phone-form.component.html',\r\n  styleUrl: './customer-phone-form.component.scss',\r\n})\r\nexport class CustomerPhoneFormComponent extends PhoneFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...CustomerPhoneFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./customer-phone-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "PhoneFormComponent"
            ],
            "templateData": "<mdtx-phone-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-phone-form>\r\n"
        },
        {
            "name": "CustomerPhoneSearchComponent",
            "id": "component-CustomerPhoneSearchComponent-cf48d17c69fc69953bffca0ecedc18e6791a4dc64c4d515fb78ed8a52ba84d3f64288cef9c35b67668202917fe47b53801f4874533c644ab5c9bf00b0fa379fe",
            "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CustomerPhoneService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-customer-phone-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"customer-phone\"\n  label=\"Search CustomerPhone\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { CustomerPhoneService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-phone-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"customer-phone\"\r\n      label=\"Search CustomerPhone\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [CustomerPhoneService],\r\n})\r\nexport class CustomerPhoneSearchComponent {\r\n  constructor(protected readonly service: CustomerPhoneService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CustomerPhoneService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CustomerPhoneService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "CustomerSearchComponent",
            "id": "component-CustomerSearchComponent-489118b38d78859f117894431b69f854712ef2eb5028c6a40893397d9628d8c344c39adcd274cb87a0653d48d46640a166f05a8bc5cabf1078c88a9925a3e8a0",
            "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CustomerService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-customer-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"customer\"\n  label=\"Search Customer\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { CustomerService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-customer-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"customer\"\r\n      label=\"Search Customer\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [CustomerService],\r\n})\r\nexport class CustomerSearchComponent {\r\n  constructor(protected readonly service: CustomerService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "DepartmentFormComponent",
            "id": "component-DepartmentFormComponent-1f88dffc3b367d1eb62c910f5f2d02e8c7fedadeb725647277b8a3d7850ff87fc66186a9b8d15a69dbc4f8987af2058890ca103d5a08feea2e8a7e231086dafc",
            "file": "libs/forms/src/lib/form-components/department/department-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-department-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./department-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { DepartmentFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-department-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './department-form.component.html',\r\n  styleUrl: './department-form.component.scss',\r\n})\r\nexport class DepartmentFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...DepartmentFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./department-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    label=\"Department Name\"\r\n    prefixIcon=\"category\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Department\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "DepartmentSearchComponent",
            "id": "component-DepartmentSearchComponent-a12996ae6b3d60ecdcdc52027618a0f2f656304341f30d7e8c5fa825edce3274fa6be59abfd53f8c6d0ca3fa4259b1009ccd20465e8211e0c03416d93626efc1",
            "file": "libs/forms/src/lib/search-inputs/department/department-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "DepartmentService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-department-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"department\"\n  label=\"Search Department\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { DepartmentService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-department-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"department\"\r\n      label=\"Search Department\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [DepartmentService],\r\n})\r\nexport class DepartmentSearchComponent {\r\n  constructor(protected readonly service: DepartmentService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "DepartmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "DepartmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "EmailFormComponent",
            "id": "component-EmailFormComponent-b09048555e0de6c5efbad6352f609f1cc0b43340f13833a594fe9afb38b8c75f6413b6db35c3f209729b4e6c11c09164ad4ceb5991bcbaf434ad2398e4b0d705",
            "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-email-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./email-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "submitLabel",
                    "defaultValue": "'Save Email'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputUsernameComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputUsernameComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../../__base';\r\nimport { EmailFormBuilder } from '../../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-email-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputUsernameComponent],\r\n  templateUrl: './email-form.component.html',\r\n  styleUrl: './email-form.component.scss',\r\n})\r\nexport class EmailFormComponent extends BaseFormComponent {\r\n  @Input() submitLabel = 'Save Email';\r\n  \r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...EmailFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./email-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-username\r\n    inputName=\"email\"\r\n    [inputControl]=\"control('email')\"\r\n  ></mdtx-input-username>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      {{ submitLabel }}\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ImageFormComponent",
            "id": "component-ImageFormComponent-98311c656ae515eb27172286a031043d888c28c12fc2c7c8aceace72de87e1e8da5265a5d26b7601780a8ebc7e4856c3cec5899107981cba78c9e35b9d1a5b26",
            "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-image-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./image-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputUrlComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputUrlComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../../__base';\r\nimport { ImageFormBuilder } from '../../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-image-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputUrlComponent, InputTextComponent],\r\n  templateUrl: './image-form.component.html',\r\n  styleUrl: './image-form.component.scss',\r\n})\r\nexport class ImageFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ImageFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./image-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"image\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-url\r\n    inputName=\"url\"\r\n    [inputControl]=\"control('url')\"\r\n  ></mdtx-input-url>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Image\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ManufacturerFormComponent",
            "id": "component-ManufacturerFormComponent-43905e457043948093f268fe723d9759eff02827a12e80d6602f6e74af1be8cb665f268a5b47d8145c6cb80ec9a160f503eaf8d9869e507d607018f53763fd6a",
            "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-manufacturer-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./manufacturer-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { ManufacturerFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-manufacturer-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './manufacturer-form.component.html',\r\n  styleUrl: './manufacturer-form.component.scss',\r\n})\r\nexport class ManufacturerFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ManufacturerFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./manufacturer-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"factory\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Manufacturer\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ManufacturerSearchComponent",
            "id": "component-ManufacturerSearchComponent-4becb6c01bce82518f30c403a13e35bdc410fe37045982b7fe312473048723fb946406e369d7de1e7d4b762aff5111d7adbf710e76d2aa11b6a2e9c82a2969bc",
            "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ManufacturerService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-manufacturer-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"manufacturer\"\n  label=\"Search Manufacturer\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { ManufacturerService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-manufacturer-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"manufacturer\"\r\n      label=\"Search Manufacturer\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [ManufacturerService],\r\n})\r\nexport class ManufacturerSearchComponent {\r\n  constructor(protected readonly service: ManufacturerService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ManufacturerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ManufacturerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "MessageFormComponent",
            "id": "component-MessageFormComponent-9d16bcfde2fa40749f4e27ba683601e718a45f16b9cffa83718c0e0bb5d5f8fbcbedf8dfb0eecf101a436640586a5dcfa1da3f78f5f4124c885374cb7782f4e9",
            "file": "libs/forms/src/lib/form-components/message/message-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-message-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./message-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { MessageFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-message-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './message-form.component.html',\r\n  styleUrl: './message-form.component.scss',\r\n})\r\nexport class MessageFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...MessageFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./message-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-textarea\r\n    inputName=\"message\"\r\n    label=\"Message\"\r\n    prefixIcon=\"message\"\r\n    [inputControl]=\"control('message')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Send\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "MessageSearchComponent",
            "id": "component-MessageSearchComponent-31d807ef3f31679434a2a07bd5296adeba999c3eaae50e6c619d9e0922f71341b199c26b01a198d9da913a0a20c064a77aa4c7d11f6b91d2789c8fc397bd96e4",
            "file": "libs/forms/src/lib/search-inputs/message/message-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-message-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"message\"\n  label=\"Search Message\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { MessageService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-message-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"message\"\r\n      label=\"Search Message\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [MessageService],\r\n})\r\nexport class MessageSearchComponent {\r\n  constructor(protected readonly service: MessageService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "NotificationFormComponent",
            "id": "component-NotificationFormComponent-1bd45515af47eb864110cfb5278378f011047fcc51a88c51516a968c716b378659985fa6ddadb1b75c497596290e9d6f52fb313f56739d5c9d726c40303bc117",
            "file": "libs/forms/src/lib/form-components/notification/notification-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-notification-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextareaComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { NotificationFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-notification-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextareaComponent],\r\n  templateUrl: './notification-form.component.html',\r\n  styleUrl: './notification-form.component.scss',\r\n})\r\nexport class NotificationFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...NotificationFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./notification-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n   <!-- Form Inputs  -->\r\n   <mdtx-input-textarea\r\n   inputName=\"message\"\r\n   label=\"Message\"\r\n   prefixIcon=\"message\"\r\n   [inputControl]=\"control('message')\"\r\n ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Notification\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "NotificationSearchComponent",
            "id": "component-NotificationSearchComponent-037ec6e8895a3048285a4723082bafc733ddfd37894c37e2ead2d515fa5b70be929e4909f1318800a8b85b0caeb1651ea60b8d23caece92358fa2a41d12dd8b7",
            "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "NotificationService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-notification-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"notification\"\n  label=\"Search Notification\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { NotificationService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-notification-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"notification\"\r\n      label=\"Search Notification\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [NotificationService],\r\n})\r\nexport class NotificationSearchComponent {\r\n  constructor(protected readonly service: NotificationService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "PermissionFormComponent",
            "id": "component-PermissionFormComponent-ec2f34a105c257306bc1e1538bb765afa4b2926e2bfcb48da5b5a39682b3198d227d89ea9d6d1b883c394be16de7d505130de1c3d6de44f9712a4870548ca91e",
            "file": "libs/forms/src/lib/form-components/permission/permission-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-permission-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./permission-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { PermissionFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-permission-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './permission-form.component.html',\r\n  styleUrl: './permission-form.component.scss',\r\n})\r\nexport class PermissionFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...PermissionFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./permission-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    label=\"Permission Name\"\r\n    prefixIcon=\"category\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Permission\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "PermissionSearchComponent",
            "id": "component-PermissionSearchComponent-441e4f078ac8cb4682f9385ad9f9fc23597d0712874927bb7a76968cd0cab387daaea75edc6ee737e256cf45d747bac2e1a2d6dea75fddbce51d2fb37d0be220",
            "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "PermissionService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-permission-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"permission\"\n  label=\"Search Permission\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { PermissionService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-permission-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"permission\"\r\n      label=\"Search Permission\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [PermissionService],\r\n})\r\nexport class PermissionSearchComponent {\r\n  constructor(protected readonly service: PermissionService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "PermissionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "PermissionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "PhoneFormComponent",
            "id": "component-PhoneFormComponent-12426dbc90f8e6dfc86f3a25067e7a291d92ba939c9fed8d8ec1b1665fdead87521c1ba689533e44c0cb287e439051a24ea0612cc63f9d9196e2f5a23f1c821a",
            "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./phone-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputPhoneComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputPhoneComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../../__base';\r\nimport { PhoneFormBuilder } from '../../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-phone-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputPhoneComponent],\r\n  templateUrl: './phone-form.component.html',\r\n  styleUrl: './phone-form.component.scss',\r\n})\r\nexport class PhoneFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...PhoneFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./phone-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-phone\r\n    inputName=\"phone\"\r\n    [inputControl]=\"control('phone')\"\r\n  ></mdtx-input-phone>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Phone\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ProductFormComponent",
            "id": "component-ProductFormComponent-0c76094ca3ff9f66428933fa1bf0be70a845b06206671ec7d182c6e6a17bf98a70affbb5dd9683a5d49fd02c015dc1a5ecabc20006ab8b530d5caa021ca46703",
            "file": "libs/forms/src/lib/form-components/product/product-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { ProductFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './product-form.component.html',\r\n  styleUrl: './product-form.component.scss',\r\n})\r\nexport class ProductFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ProductFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./product-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"inventory\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"upc\"\r\n    prefixIcon=\"barcode\"\r\n    [inputControl]=\"control('upc')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Product\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ProductImageFormComponent",
            "id": "component-ProductImageFormComponent-2e2d443fe6049e67bed420fabde51e089773f9c0a0d29685d854e2eaa51ffae16bde489c9311e5a490a77b96baad65c64ff42b0be9c96d004786ac817b44105a",
            "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-image-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-image-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ImageFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ProductImageFormBuilder } from '../../form-builders';\r\nimport { ImageFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-image-form',\r\n  standalone: true,\r\n  imports: [ImageFormComponent],\r\n  templateUrl: './product-image-form.component.html',\r\n  styleUrl: './product-image-form.component.scss',\r\n})\r\nexport class ProductImageFormComponent extends ImageFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ProductImageFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./product-image-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "ImageFormComponent"
            ],
            "templateData": "<mdtx-image-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-image-form>\r\n"
        },
        {
            "name": "ProductImageSearchComponent",
            "id": "component-ProductImageSearchComponent-633777f10c5081c4cfcaabb444b91285af2254badddb5fb64837c86529c412abaa02bc61ecabe7f0af4c6096e74ea12108e7d65a0339e3c3587327ad739791fe",
            "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProductImageService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-product-image-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"product-image\"\n  label=\"Search ProductImage\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { ProductImageService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-image-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"product-image\"\r\n      label=\"Search ProductImage\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [ProductImageService],\r\n})\r\nexport class ProductImageSearchComponent {\r\n  constructor(protected readonly service: ProductImageService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ProductImageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ProductImageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "ProductSearchComponent",
            "id": "component-ProductSearchComponent-a05a46d16d96cc7ed03416aebdcaef4b74d6d9c221cf1f490e9d611f085384b8f5d587e4d8dca3811fec145b754c4607ac1580df9925a5537b4a81e36694da30",
            "file": "libs/forms/src/lib/search-inputs/product/product-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProductService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-product-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"product\"\n  label=\"Search Product\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { ProductService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"product\"\r\n      label=\"Search Product\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [ProductService],\r\n})\r\nexport class ProductSearchComponent {\r\n  constructor(protected readonly service: ProductService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "ProductVideoFormComponent",
            "id": "component-ProductVideoFormComponent-92fe525c29e9e8a1d200ec809d2df48bdeb3d603bd84b18702ddaddb763009b840be0cc1c23cb3cd91fa0bc22ad9088c2ddd44e7dc62994653b3932660110e9e",
            "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-video-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-video-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "VideoFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ProductVideoFormBuilder } from '../../form-builders';\r\nimport { VideoFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-video-form',\r\n  standalone: true,\r\n  imports: [VideoFormComponent],\r\n  templateUrl: './product-video-form.component.html',\r\n  styleUrl: './product-video-form.component.scss',\r\n})\r\nexport class ProductVideoFormComponent extends VideoFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ProductVideoFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./product-video-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "VideoFormComponent"
            ],
            "templateData": "<mdtx-video-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-video-form>\r\n"
        },
        {
            "name": "ProductVideoSearchComponent",
            "id": "component-ProductVideoSearchComponent-5b5709569a1b4d64d203828b430aa3dac1aec6d85526ba7fdf909e7c11197a88922dbd34380f8a65b38f06af52343a4ec82a4ea286db753010e6e8bfdf207c60",
            "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProductVideoService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-product-video-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"product-video\"\n  label=\"Search ProductVideo\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { ProductVideoService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-product-video-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"product-video\"\r\n      label=\"Search ProductVideo\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [ProductVideoService],\r\n})\r\nexport class ProductVideoSearchComponent {\r\n  constructor(protected readonly service: ProductVideoService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ProductVideoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ProductVideoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "ProjectFormComponent",
            "id": "component-ProjectFormComponent-03a5a6fab1f9f0e5b742d00d27eeaafb5cf7ffac76e49cfafdcfbd54ab16f73ae697a6d504f26cbbbf8d80c27c565addc3c8ba7a664a0b3394bdeb23cf1e279c",
            "file": "libs/forms/src/lib/form-components/project/project-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-project-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { ProjectFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-project-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './project-form.component.html',\r\n  styleUrl: './project-form.component.scss',\r\n})\r\nexport class ProjectFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...ProjectFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./project-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Project\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ProjectSearchComponent",
            "id": "component-ProjectSearchComponent-8c9d9370632ddfb3afe2810891596ed5e74d1ff9509473a7d30eabfd280b27a6265344e38a50baa4b0b44448c61ee6e38094b71ba30bc8042943dbae9376920f",
            "file": "libs/forms/src/lib/search-inputs/project/project-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ProjectService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-project-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"project\"\n  label=\"Search Project\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { ProjectService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-project-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"project\"\r\n      label=\"Search Project\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [ProjectService],\r\n})\r\nexport class ProjectSearchComponent {\r\n  constructor(protected readonly service: ProjectService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "RoleFormComponent",
            "id": "component-RoleFormComponent-fda79b11759a9eba0488710edacc0f9463d2fb63449c0f56c0a05df79e40929d5cb0beb1e5dc932d8145a5906639cf9b422655daec1e543a72bc98cb846acfcc",
            "file": "libs/forms/src/lib/form-components/role/role-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-role-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./role-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { RoleFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-role-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './role-form.component.html',\r\n  styleUrl: './role-form.component.scss',\r\n})\r\nexport class RoleFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...RoleFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./role-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    label=\"Role Name\"\r\n    prefixIcon=\"category\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Role\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "RoleSearchComponent",
            "id": "component-RoleSearchComponent-4eb207ecd00f234c4cac642b7ccdfe71f5ec7f42fef31eb7e93b616232c3e22ff45b198139a5140d141351503d9fc2d5d65bae6609fae70aa002142653ef72ca",
            "file": "libs/forms/src/lib/search-inputs/role/role-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "RoleService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-role-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"role\"\n  label=\"Search Role\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { RoleService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-role-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"role\"\r\n      label=\"Search Role\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [RoleService],\r\n})\r\nexport class RoleSearchComponent {\r\n  constructor(protected readonly service: RoleService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "RoleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "RoleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "SkuFormComponent",
            "id": "component-SkuFormComponent-6f3aceb2c0d38e452e9a71e0addfda99ed8ad78b6bae80cb6336fbea63773d817ba6f7e8f4f7d29e07247100d2082e5107cce99b77b6d259ac1e774f0e6babea",
            "file": "libs/forms/src/lib/form-components/sku/sku-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sku-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sku-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { SkuFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-sku-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './sku-form.component.html',\r\n  styleUrl: './sku-form.component.scss',\r\n})\r\nexport class SkuFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...SkuFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./sku-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"inventory\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-text\r\n    inputName=\"upc\"\r\n    prefixIcon=\"barcode\"\r\n    [inputControl]=\"control('upc')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Sku\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SkuSearchComponent",
            "id": "component-SkuSearchComponent-dd289a326ab7a4daa9ed92455d052978c5a36632e27d7a8eeddbceca1256de43888c1da8f1b9761ef50438f745f6c46a9c519fc61a3b89b67c570aeb28cf9bd0",
            "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "SkuService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-sku-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"sku\"\n  label=\"Search Sku\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { SkuService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-sku-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"sku\"\r\n      label=\"Search Sku\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [SkuService],\r\n})\r\nexport class SkuSearchComponent {\r\n  constructor(protected readonly service: SkuService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "SkuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "SkuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "SprintFormComponent",
            "id": "component-SprintFormComponent-cfa02205182e12987922ce8bd0b7d7a7acc7c993cdb9fa730eade2a19dab0c0a48bafdf3d69acdb4bca044fc37bf588090d2ca9fad9c61ad3e5fee02ee5c51d5",
            "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sprint-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sprint-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { SprintFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-sprint-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './sprint-form.component.html',\r\n  styleUrl: './sprint-form.component.scss',\r\n})\r\nexport class SprintFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...SprintFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./sprint-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Sprint\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "SprintSearchComponent",
            "id": "component-SprintSearchComponent-4dbb5300158188b40124045b90e2652cc14cf42885fa544d935b4e330d845640ff23a38ba3b32d49fa4bcce64dbc1d24336a96a5f550da05d09aebb92359ea52",
            "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "SprintService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-sprint-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"sprint\"\n  label=\"Search Sprint\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { SprintService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-sprint-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"sprint\"\r\n      label=\"Search Sprint\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [SprintService],\r\n})\r\nexport class SprintSearchComponent {\r\n  constructor(protected readonly service: SprintService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "SprintService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "SprintService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "StoreFormComponent",
            "id": "component-StoreFormComponent-076a1a6f562220e8c42d7cd623d7e0531cccdfc4d817b13dcb84d1c57420a6fdb4faa383f4d99b5162f03093685cdfa2c09dcfc902663daf92859c048a53f905",
            "file": "libs/forms/src/lib/form-components/store/store-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-store-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./store-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { StoreFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-store-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputTextareaComponent],\r\n  templateUrl: './store-form.component.html',\r\n  styleUrl: './store-form.component.scss',\r\n})\r\nexport class StoreFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...StoreFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./store-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Store\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "StoreSearchComponent",
            "id": "component-StoreSearchComponent-9cd90617070279c998ca9d2c7ddeb6333623dd09434dfb4da000da34918785b6695d71540b5c59e63b346815273a06a989a2a11f411508b29c92a83283ec095c",
            "file": "libs/forms/src/lib/search-inputs/store/store-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "StoreService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-store-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"store\"\n  label=\"Search Store\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { StoreService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-store-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"store\"\r\n      label=\"Search Store\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [StoreService],\r\n})\r\nexport class StoreSearchComponent {\r\n  constructor(protected readonly service: StoreService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "TaskFormComponent",
            "id": "component-TaskFormComponent-092e62ff9f757d823e6192aff862b32457bfefb02adf05f9447d5e022c7362fbae7da4b1e9d1c27ea6168a32b9f95b176e9307ec887b61323d1abb6ac368ac12",
            "file": "libs/forms/src/lib/form-components/task/task-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-task-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./task-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputTextareaComponent",
                    "type": "component"
                },
                {
                    "name": "InputDateComponent",
                    "type": "component"
                },
                {
                    "name": "InputRadioComponent",
                    "type": "component"
                },
                {
                    "name": "InputRangeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputDateComponent,\r\n  InputRadioComponent,\r\n  InputRangeComponent,\r\n  InputTextComponent,\r\n  InputTextareaComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { TaskFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-task-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonFormModule,\r\n    InputTextComponent,\r\n    InputTextareaComponent,\r\n    InputDateComponent,\r\n    InputRadioComponent,\r\n    InputRangeComponent,\r\n  ],\r\n  templateUrl: './task-form.component.html',\r\n  styleUrl: './task-form.component.scss',\r\n})\r\nexport class TaskFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...TaskFormBuilder.controls([]),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./task-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <mdtx-input-range\r\n    [min]=\"0\"\r\n    [max]=\"10\"\r\n    [step]=\"1\"\r\n    inputName=\"difficulty\"\r\n    [inputControl]=\"control('difficulty')\"\r\n  ></mdtx-input-range>\r\n\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-textarea\r\n    inputName=\"description\"\r\n    [inputControl]=\"control('description')\"\r\n  ></mdtx-input-textarea>\r\n\r\n  <div class=\"input-group\">\r\n    <mdtx-input-date\r\n      inputName=\"due\"\r\n      prefixIcon=\"pending_actions\"\r\n      label=\"Due Date\"\r\n      [inputControl]=\"control('due')\"\r\n    >\r\n    </mdtx-input-date>\r\n\r\n    <mdtx-input-date\r\n      inputName=\"startDate\"\r\n      prefixIcon=\"bomb\"\r\n      label=\"Start Date\"\r\n      [inputControl]=\"control('startDate')\"\r\n    >\r\n    </mdtx-input-date>\r\n\r\n    <mdtx-input-date\r\n      inputName=\"finishDate\"\r\n      prefixIcon=\"destruction\"\r\n      label=\"End Date\"\r\n      [inputControl]=\"control('finishDate')\"\r\n    >\r\n    </mdtx-input-date>\r\n  </div>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Task\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "TaskSearchComponent",
            "id": "component-TaskSearchComponent-0cc2353700abbbe7ad9456c128cf2620715dff8573ff81bc82a923cca7fca28313932b1f7ac19220d9ae4fdbad7b2d0b3a8acdde47dbc5b5704f23b47f147e75",
            "file": "libs/forms/src/lib/search-inputs/task/task-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TaskService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-task-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"task\"\n  label=\"Search Task\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { TaskService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-task-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"task\"\r\n      label=\"Search Task\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [TaskService],\r\n})\r\nexport class TaskSearchComponent {\r\n  constructor(protected readonly service: TaskService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "TaskService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "TaskService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "TicketFormComponent",
            "id": "component-TicketFormComponent-74f696fd2f98b470788f03c42912027b1cb22b73a7e2a1404ad9ae3d921ed20343210978700569590a6eb474c6d8d56766a78a50f669ee2e486b29bf8ddab217",
            "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-ticket-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ticket-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TaskFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TicketFormBuilder } from '../../form-builders';\r\nimport { TaskFormComponent } from '../task';\r\n\r\n@Component({\r\n  selector: 'mdtx-ticket-form',\r\n  standalone: true,\r\n  imports: [TaskFormComponent],\r\n  templateUrl: './ticket-form.component.html',\r\n  styleUrl: './ticket-form.component.scss',\r\n})\r\nexport class TicketFormComponent extends TaskFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...TicketFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./ticket-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "TaskFormComponent"
            ],
            "templateData": "<mdtx-task-form (submitEvent)=\"formSubmit()\"></mdtx-task-form>\r\n"
        },
        {
            "name": "TicketSearchComponent",
            "id": "component-TicketSearchComponent-8fd4c38a555c2b7f1e0a2949a94e7a927d39a360192d6d1b23e8010bed3ccd9a48c1dc9e6a28e20ced427b267680373a9b398d34dcb4352f3563a2fe551b1273",
            "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "TicketService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-ticket-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"ticket\"\n  label=\"Search Ticket\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { TicketService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-ticket-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"ticket\"\r\n      label=\"Search Ticket\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [TicketService],\r\n})\r\nexport class TicketSearchComponent {\r\n  constructor(protected readonly service: TicketService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "TicketService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "UserAddressFormComponent",
            "id": "component-UserAddressFormComponent-5b4778e927b1e657b57edbbd1c58f3b732698256e9c5a2eeab591a684c532f2dbddc43e9815e276c74b5373d6f56e0d705c7ffbca6535ae950ff9b70bce37644",
            "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-address-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AddressFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { UserAddressFormBuilder } from '../../form-builders';\r\nimport { AddressFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-address-form',\r\n  standalone: true,\r\n  imports: [AddressFormComponent],\r\n  templateUrl: './user-address-form.component.html',\r\n  styleUrl: './user-address-form.component.scss',\r\n})\r\nexport class UserAddressFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...UserAddressFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./user-address-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<mdtx-address-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-address-form>\r\n"
        },
        {
            "name": "UserAddressSearchComponent",
            "id": "component-UserAddressSearchComponent-884581d8303156d318cf790f9a722161246337768dad879fffb02aae11393ad622c63fc4ce69893522e79e112f783915508c9a7e672323d072f3a119deda2a69",
            "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "UserAddressService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-user-address-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"user-address\"\n  label=\"Search UserAddress\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { UserAddressService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-address-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"user-address\"\r\n      label=\"Search UserAddress\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [UserAddressService],\r\n})\r\nexport class UserAddressSearchComponent {\r\n  constructor(protected readonly service: UserAddressService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "UserAddressService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "UserAddressService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "UserEmailFormComponent",
            "id": "component-UserEmailFormComponent-662723cbad1e4ab304aa29b4169c27ba515e1063476a840b7c72466851cecc807c10a84d70a3ce44297eafde0b5e4916b8d18a972c11545b963cce99be39f550",
            "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-email-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-email-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "EmailFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { UserEmailFormBuilder } from '../../form-builders';\r\nimport { EmailFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-email-form',\r\n  standalone: true,\r\n  imports: [EmailFormComponent],\r\n  templateUrl: './user-email-form.component.html',\r\n  styleUrl: './user-email-form.component.scss',\r\n})\r\nexport class UserEmailFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...UserEmailFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./user-email-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<mdtx-email-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-email-form>\r\n"
        },
        {
            "name": "UserEmailSearchComponent",
            "id": "component-UserEmailSearchComponent-94c50c21f04a5278edd0012c3ac81148e0035867eb3e15fd172a6b5918a5027fa97927909c7033f40c95ea416cd9debedea8a26ab0082276797b0c321ad2208f",
            "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "UserEmailService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-user-email-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"user-email\"\n  label=\"Search UserEmail\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { UserEmailService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-email-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"user-email\"\r\n      label=\"Search UserEmail\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [UserEmailService],\r\n})\r\nexport class UserEmailSearchComponent {\r\n  constructor(protected readonly service: UserEmailService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "UserEmailService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "UserEmailService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "UserFormComponent",
            "id": "component-UserFormComponent-f90c0727732064475b41251a6144bbb4f5d9a8fcce22a884a7c0b120d7685721194147a4a7bb4d07cebbc3001c834eb7773b4f616e5be70248733635c1aecb8f",
            "file": "libs/forms/src/lib/form-components/user/user-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputUsernameComponent",
                    "type": "component"
                },
                {
                    "name": "InputPasswordComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { UserFormBuilder } from '../../form-builders';\r\nimport {\r\n  InputPasswordComponent,\r\n  InputTextComponent,\r\n  InputUsernameComponent,\r\n} from '@mdtx/material/form';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-form',\r\n  standalone: true,\r\n  imports: [InputTextComponent, InputUsernameComponent, InputPasswordComponent],\r\n  templateUrl: './user-form.component.html',\r\n  styleUrl: './user-form.component.scss',\r\n})\r\nexport class UserFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...UserFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./user-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-username\r\n    inputName=\"username\"\r\n    [inputControl]=\"control('username')\"\r\n  ></mdtx-input-username>\r\n\r\n  <mdtx-input-password\r\n    inputName=\"password\"\r\n    [inputControl]=\"control('password')\"\r\n  ></mdtx-input-password>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save User\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "UserPhoneFormComponent",
            "id": "component-UserPhoneFormComponent-e3b1dc0449eb1bcb7555312a642868b10d212dc6b21a9947ea33f1efe2c983e5d7edd5b21eade0b81d122eb222b3ee4fbfeebe51938c2291919fbf4785fc75a0",
            "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-phone-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PhoneFormComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { BaseFormComponent } from '../../__base';\r\nimport { UserPhoneFormBuilder } from '../../form-builders';\r\nimport { PhoneFormComponent } from '../__base';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-phone-form',\r\n  standalone: true,\r\n  imports: [PhoneFormComponent],\r\n  templateUrl: './user-phone-form.component.html',\r\n  styleUrl: './user-phone-form.component.scss',\r\n})\r\nexport class UserPhoneFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...UserPhoneFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./user-phone-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<mdtx-phone-form\r\n  [resourceFormGroup]=\"resourceFormGroup\"\r\n  (submitEvent)=\"formSubmit()\"\r\n></mdtx-phone-form>\r\n"
        },
        {
            "name": "UserPhoneSearchComponent",
            "id": "component-UserPhoneSearchComponent-e4fee96588f592915249b56e5c0aba28c7c5f8713b6d1388ce3b7578596cc545748d46bce64f5216425882428eace488be7c3a5cca30d10d9bc3e44d4815dbd3",
            "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "UserPhoneService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-user-phone-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"user-phone\"\n  label=\"Search UserPhone\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { UserPhoneService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-phone-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"user-phone\"\r\n      label=\"Search UserPhone\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [UserPhoneService],\r\n})\r\nexport class UserPhoneSearchComponent {\r\n  constructor(protected readonly service: UserPhoneService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "UserPhoneService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "UserPhoneService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "UserSearchComponent",
            "id": "component-UserSearchComponent-68f266012b14be1f638b9a3b36304b430a338461112c0fea552fc40be7537d713411618113a471c7b6b07fb68fba5ae77b7418f656d2401b2397d0b5ba0261ae",
            "file": "libs/forms/src/lib/search-inputs/user/user-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "UserService",
                    "type": "injectable"
                }
            ],
            "selector": "mdtx-user-search",
            "styleUrls": [],
            "styles": [],
            "template": "<mdtx-input-autocomplete\n  *ngIf=\"service.asOptions$ | async as options\"\n  [options]=\"options\"\n  inputName=\"user\"\n  label=\"Search User\"\n  prefixIcon=\"search\"\n></mdtx-input-autocomplete>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgIf"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "InputAutocompleteComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { InputAutocompleteComponent } from '@mdtx/material/form';\r\nimport { UserService } from '@mdtx/ngrx';\r\n\r\n@Component({\r\n  selector: 'mdtx-user-search',\r\n  standalone: true,\r\n  imports: [NgIf, AsyncPipe, InputAutocompleteComponent],\r\n  template: `\r\n    <mdtx-input-autocomplete\r\n      *ngIf=\"service.asOptions$ | async as options\"\r\n      [options]=\"options\"\r\n      inputName=\"user\"\r\n      label=\"Search User\"\r\n      prefixIcon=\"search\"\r\n    ></mdtx-input-autocomplete>\r\n  `,\r\n  providers: [UserService],\r\n})\r\nexport class UserSearchComponent {\r\n  constructor(protected readonly service: UserService) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": []
        },
        {
            "name": "VideoFormComponent",
            "id": "component-VideoFormComponent-4dbc89cd6ce22e2944ad9c1f34748ed616e4ba3c57320c96fcadc92397b04a7fec7b047d915d10e82a5f696ce597b4121f206a466a8737f0b9559ade292b7afd",
            "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-video-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./video-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                },
                {
                    "name": "InputUrlComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport {\r\n  CommonFormModule,\r\n  InputTextComponent,\r\n  InputUrlComponent,\r\n} from '@mdtx/material/form';\r\nimport { BaseFormComponent } from '../../../__base';\r\nimport { VideoFormBuilder } from '../../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-video-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent, InputUrlComponent],\r\n  templateUrl: './video-form.component.html',\r\n  styleUrl: './video-form.component.scss',\r\n})\r\nexport class VideoFormComponent extends BaseFormComponent {\r\n  override createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      ...VideoFormBuilder.controls(),\r\n    });\r\n  }\r\n}\r\n",
            "styleUrl": "./video-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    inputName=\"name\"\r\n    prefixIcon=\"image\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <mdtx-input-url\r\n    inputName=\"url\"\r\n    [inputControl]=\"control('url')\"\r\n  ></mdtx-input-url>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"formSubmit()\"\r\n      [disabled]=\"isFormInvalid()\"\r\n      [attr.data-testid]=\"'submit'\"\r\n    >\r\n      Save Video\r\n    </button>\r\n    <button\r\n      mat-stroked-button\r\n      color=\"primary\"\r\n      (click)=\"formReset()\"\r\n      [attr.data-testid]=\"'reset'\"\r\n    >\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/__base/address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateAddressDto>(\r\n  'Address Form'\r\n)\r\n  .add('street')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('city')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('state')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('country')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('zip')\r\n  .required()\r\n  .shortText()\r\n  \r\n  .done()\r\n  .lock()"
            },
            {
                "name": "API_BASEURL_FOR_STORYBOOK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/__base/base-url.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'http://localhost:3000'"
            },
            {
                "name": "CategoryFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/category.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "CustomerAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\r\n    .add('street')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('city')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('state')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('country')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('zip')\r\n    .required()\r\n    .shortText()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "CustomerEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\r\n    .add('email')\r\n    .required()\r\n    .email()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "CustomerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\r\n  'Customer Form'\r\n)\r\n\r\n  .add('username')\r\n  .required()\r\n  .email()\r\n\r\n  .add('password')\r\n  .required()\r\n  .password()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "CustomerPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\r\n    .add('phone')\r\n    .required()\r\n    .phone()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "DepartmentFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/department.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\r\n  'Department Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  \r\n  .done()\r\n  .lock()"
            },
            {
                "name": "EmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/__base/email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateEmailDto>(\r\n  'Email Form'\r\n)\r\n  .add('email')\r\n  .email()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'category name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n    const passwordToggle = findButton('password-toggle');\r\n    \r\n    // Form Fields\r\n    const username = findInput('username');\r\n    const password = findInput('password');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(username).toBeTruthy();\r\n    expect(password).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(username, 'user@domain.com');\r\n      await type(password, 'Password123.!');\r\n\r\n      await click(passwordToggle);\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'some@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739001019');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'department name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'manufacturer name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'message name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'notification name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'permission name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product-image name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product-video name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'project name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'role name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'sku name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'sprint name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'store name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const description = findInput('description');\r\n    const due = findInput('due');\r\n    const startDate = findInput('startDate');\r\n    const finishDate = findInput('finishDate');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(description).toBeTruthy();\r\n    expect(due).toBeTruthy();\r\n    expect(startDate).toBeTruthy();\r\n    expect(finishDate).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type task name here');\r\n      await type(description, 'Type task description here');\r\n\r\n      await type(due, '5/14/2024');\r\n      await type(startDate, '5/16/2024');\r\n      await type(finishDate, '5/20/2024');\r\n\r\n      await await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const description = findInput('description');\r\n    const due = findInput('due');\r\n    const startDate = findInput('startDate');\r\n    const finishDate = findInput('finishDate');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(description).toBeTruthy();\r\n    expect(due).toBeTruthy();\r\n    expect(startDate).toBeTruthy();\r\n    expect(finishDate).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type task name here');\r\n      await type(description, 'Type task description here');\r\n\r\n      await type(due, '5/14/2024');\r\n      await type(startDate, '5/16/2024');\r\n      await type(finishDate, '5/20/2024');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n    const passwordToggle = findButton('password-toggle');\r\n\r\n    // Form Fields\r\n    const username = findInput('username');\r\n    const password = findInput('password');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(username).toBeTruthy();\r\n    expect(password).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(username, 'user@gmail.com');\r\n      await type(password, 'Password123.!');\r\n\r\n      await click(passwordToggle);\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'email@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739600015');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('category');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'category 1'],\n      [2, 'category 2'],\n      [3, 'category 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customer');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customer 1'],\n      [2, 'customer 2'],\n      [3, 'customer 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerAddress');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerAddress 1'],\n      [2, 'customerAddress 2'],\n      [3, 'customerAddress 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerEmail');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerEmail 1'],\n      [2, 'customerEmail 2'],\n      [3, 'customerEmail 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerPhone');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerPhone 1'],\n      [2, 'customerPhone 2'],\n      [3, 'customerPhone 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('department');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'department 1'],\n      [2, 'department 2'],\n      [3, 'department 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('manufacturer');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'manufacturer 1'],\n      [2, 'manufacturer 2'],\n      [3, 'manufacturer 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('message');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'message 1'],\n      [2, 'message 2'],\n      [3, 'message 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('notification');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'notification 1'],\n      [2, 'notification 2'],\n      [3, 'notification 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('permission');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'permission 1'],\n      [2, 'permission 2'],\n      [3, 'permission 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('product');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'product 1'],\n      [2, 'product 2'],\n      [3, 'product 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('productImage');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'productImage 1'],\n      [2, 'productImage 2'],\n      [3, 'productImage 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('productVideo');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'productVideo 1'],\n      [2, 'productVideo 2'],\n      [3, 'productVideo 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('project');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'project 1'],\n      [2, 'project 2'],\n      [3, 'project 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('role');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'role 1'],\n      [2, 'role 2'],\n      [3, 'role 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('sku');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'sku 1'],\n      [2, 'sku 2'],\n      [3, 'sku 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('sprint');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'sprint 1'],\n      [2, 'sprint 2'],\n      [3, 'sprint 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('store');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'store 1'],\n      [2, 'store 2'],\n      [3, 'store 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('task');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'task 1'],\n      [2, 'task 2'],\n      [3, 'task 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('ticket');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'ticket 1'],\n      [2, 'ticket 2'],\n      [3, 'ticket 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('user');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'user 1'],\n      [2, 'user 2'],\n      [3, 'user 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userAddress');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userAddress 1'],\n      [2, 'userAddress 2'],\n      [3, 'userAddress 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userEmail');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userEmail 1'],\n      [2, 'userEmail 2'],\n      [3, 'userEmail 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userPhone');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userPhone 1'],\n      [2, 'userPhone 2'],\n      [3, 'userPhone 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'email@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const url = findInput('url');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(url).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type image name');\r\n      await type(url, 'https://cdn.com/image.png');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739600016');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const url = findInput('url');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(url).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type video name');\r\n      await type(url, 'https://cdn.com/video.mp4');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
            },
            {
                "name": "ImageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/__base/image.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateImageDto>(\r\n  'Image Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('url')\r\n  .url()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "ManufacturerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n    \r\n    .add('description')\r\n    .longText()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "MessageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/message.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\r\n  'Message Form'\r\n)\r\n\r\n  .add('message')\r\n  .required()\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategoryFormComponent>",
                "defaultValue": "{\r\n  component: CategoryFormComponent,\r\n  title: 'CategoryFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerFormComponent>",
                "defaultValue": "{\r\n  component: CustomerFormComponent,\r\n  title: 'CustomerFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerAddressFormComponent>",
                "defaultValue": "{\r\n  component: CustomerAddressFormComponent,\r\n  title: 'CustomerAddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerEmailFormComponent>",
                "defaultValue": "{\r\n  component: CustomerEmailFormComponent,\r\n  title: 'CustomerEmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerPhoneFormComponent>",
                "defaultValue": "{\r\n  component: CustomerPhoneFormComponent,\r\n  title: 'CustomerPhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DepartmentFormComponent>",
                "defaultValue": "{\r\n  component: DepartmentFormComponent,\r\n  title: 'DepartmentFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ManufacturerFormComponent>",
                "defaultValue": "{\r\n  component: ManufacturerFormComponent,\r\n  title: 'ManufacturerFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MessageFormComponent>",
                "defaultValue": "{\r\n  component: MessageFormComponent,\r\n  title: 'MessageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationFormComponent>",
                "defaultValue": "{\r\n  component: NotificationFormComponent,\r\n  title: 'NotificationFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PermissionFormComponent>",
                "defaultValue": "{\r\n  component: PermissionFormComponent,\r\n  title: 'PermissionFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductFormComponent>",
                "defaultValue": "{\r\n  component: ProductFormComponent,\r\n  title: 'ProductFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductImageFormComponent>",
                "defaultValue": "{\r\n  component: ProductImageFormComponent,\r\n  title: 'ProductImageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductVideoFormComponent>",
                "defaultValue": "{\r\n  component: ProductVideoFormComponent,\r\n  title: 'ProductVideoFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProjectFormComponent>",
                "defaultValue": "{\r\n  component: ProjectFormComponent,\r\n  title: 'ProjectFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RoleFormComponent>",
                "defaultValue": "{\r\n  component: RoleFormComponent,\r\n  title: 'RoleFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkuFormComponent>",
                "defaultValue": "{\r\n  component: SkuFormComponent,\r\n  title: 'SkuFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SprintFormComponent>",
                "defaultValue": "{\r\n  component: SprintFormComponent,\r\n  title: 'SprintFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoreFormComponent>",
                "defaultValue": "{\r\n  component: StoreFormComponent,\r\n  title: 'StoreFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskFormComponent>",
                "defaultValue": "{\r\n  component: TaskFormComponent,\r\n  title: 'TaskFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TicketFormComponent>",
                "defaultValue": "{\r\n  component: TicketFormComponent,\r\n  title: 'TicketFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserFormComponent>",
                "defaultValue": "{\r\n  component: UserFormComponent,\r\n  title: 'UserFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserAddressFormComponent>",
                "defaultValue": "{\r\n  component: UserAddressFormComponent,\r\n  title: 'UserAddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserEmailFormComponent>",
                "defaultValue": "{\r\n  component: UserEmailFormComponent,\r\n  title: 'UserEmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserPhoneFormComponent>",
                "defaultValue": "{\r\n  component: UserPhoneFormComponent,\r\n  title: 'UserPhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategorySearchComponent>",
                "defaultValue": "{\n  component: CategorySearchComponent,\n  title: 'CategorySearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Category: 'Categories',\n            },\n            entityMetadata: {\n              Category: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerSearchComponent>",
                "defaultValue": "{\n  component: CustomerSearchComponent,\n  title: 'CustomerSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Customer: 'Customers',\n            },\n            entityMetadata: {\n              Customer: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerAddressSearchComponent>",
                "defaultValue": "{\n  component: CustomerAddressSearchComponent,\n  title: 'CustomerAddressSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerAddress: 'CustomerAddresss',\n            },\n            entityMetadata: {\n              CustomerAddress: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerEmailSearchComponent>",
                "defaultValue": "{\n  component: CustomerEmailSearchComponent,\n  title: 'CustomerEmailSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerEmail: 'CustomerEmails',\n            },\n            entityMetadata: {\n              CustomerEmail: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerPhoneSearchComponent>",
                "defaultValue": "{\n  component: CustomerPhoneSearchComponent,\n  title: 'CustomerPhoneSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerPhone: 'CustomerPhones',\n            },\n            entityMetadata: {\n              CustomerPhone: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DepartmentSearchComponent>",
                "defaultValue": "{\n  component: DepartmentSearchComponent,\n  title: 'DepartmentSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Department: 'Departments',\n            },\n            entityMetadata: {\n              Department: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ManufacturerSearchComponent>",
                "defaultValue": "{\n  component: ManufacturerSearchComponent,\n  title: 'ManufacturerSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Manufacturer: 'Manufacturers',\n            },\n            entityMetadata: {\n              Manufacturer: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MessageSearchComponent>",
                "defaultValue": "{\n  component: MessageSearchComponent,\n  title: 'MessageSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Message: 'Messages',\n            },\n            entityMetadata: {\n              Message: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationSearchComponent>",
                "defaultValue": "{\n  component: NotificationSearchComponent,\n  title: 'NotificationSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Notification: 'Notifications',\n            },\n            entityMetadata: {\n              Notification: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PermissionSearchComponent>",
                "defaultValue": "{\n  component: PermissionSearchComponent,\n  title: 'PermissionSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Permission: 'Permissions',\n            },\n            entityMetadata: {\n              Permission: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductSearchComponent>",
                "defaultValue": "{\n  component: ProductSearchComponent,\n  title: 'ProductSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Product: 'Products',\n            },\n            entityMetadata: {\n              Product: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductImageSearchComponent>",
                "defaultValue": "{\n  component: ProductImageSearchComponent,\n  title: 'ProductImageSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              ProductImage: 'ProductImages',\n            },\n            entityMetadata: {\n              ProductImage: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductVideoSearchComponent>",
                "defaultValue": "{\n  component: ProductVideoSearchComponent,\n  title: 'ProductVideoSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              ProductVideo: 'ProductVideoes',\n            },\n            entityMetadata: {\n              ProductVideo: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProjectSearchComponent>",
                "defaultValue": "{\n  component: ProjectSearchComponent,\n  title: 'ProjectSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Project: 'Projects',\n            },\n            entityMetadata: {\n              Project: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RoleSearchComponent>",
                "defaultValue": "{\n  component: RoleSearchComponent,\n  title: 'RoleSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Role: 'Roles',\n            },\n            entityMetadata: {\n              Role: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkuSearchComponent>",
                "defaultValue": "{\n  component: SkuSearchComponent,\n  title: 'SkuSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Sku: 'Skus',\n            },\n            entityMetadata: {\n              Sku: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SprintSearchComponent>",
                "defaultValue": "{\n  component: SprintSearchComponent,\n  title: 'SprintSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Sprint: 'Sprints',\n            },\n            entityMetadata: {\n              Sprint: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoreSearchComponent>",
                "defaultValue": "{\n  component: StoreSearchComponent,\n  title: 'StoreSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Store: 'Stores',\n            },\n            entityMetadata: {\n              Store: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskSearchComponent>",
                "defaultValue": "{\n  component: TaskSearchComponent,\n  title: 'TaskSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Task: 'Tasks',\n            },\n            entityMetadata: {\n              Task: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TicketSearchComponent>",
                "defaultValue": "{\n  component: TicketSearchComponent,\n  title: 'TicketSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Ticket: 'Tickets',\n            },\n            entityMetadata: {\n              Ticket: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserSearchComponent>",
                "defaultValue": "{\n  component: UserSearchComponent,\n  title: 'UserSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              User: 'Users',\n            },\n            entityMetadata: {\n              User: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserAddressSearchComponent>",
                "defaultValue": "{\n  component: UserAddressSearchComponent,\n  title: 'UserAddressSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserAddress: 'UserAddresss',\n            },\n            entityMetadata: {\n              UserAddress: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserEmailSearchComponent>",
                "defaultValue": "{\n  component: UserEmailSearchComponent,\n  title: 'UserEmailSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserEmail: 'UserEmails',\n            },\n            entityMetadata: {\n              UserEmail: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserPhoneSearchComponent>",
                "defaultValue": "{\n  component: UserPhoneSearchComponent,\n  title: 'UserPhoneSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserPhone: 'UserPhones',\n            },\n            entityMetadata: {\n              UserPhone: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AddressFormComponent>",
                "defaultValue": "{\r\n  component: AddressFormComponent,\r\n  title: 'AddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<EmailFormComponent>",
                "defaultValue": "{\r\n  component: EmailFormComponent,\r\n  title: 'EmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ImageFormComponent>",
                "defaultValue": "{\r\n  component: ImageFormComponent,\r\n  title: 'ImageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PhoneFormComponent>",
                "defaultValue": "{\r\n  component: PhoneFormComponent,\r\n  title: 'PhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<VideoFormComponent>",
                "defaultValue": "{\r\n  component: VideoFormComponent,\r\n  title: 'VideoFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "NotificationFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/notification.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\r\n\r\n    .add('message')\r\n    .required()\r\n    .longText()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "PermissionFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/permission.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\r\n  'Permission Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "PhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/__base/phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreatePhoneDto>(\r\n  'Phone Form'\r\n)\r\n  .add('phone')\r\n  .phone()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "ProductFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\r\n  'Product Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('upc')\r\n  .required()\r\n  .ean()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('category')\r\n\r\n  .add('department')\r\n\r\n  .add('manufacturers')\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "ProductImageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-image.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('url')\r\n    .required()\r\n    .url()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "ProductVideoFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-video.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('url')\r\n    .required()\r\n    .url()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "ProjectFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/project.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\r\n  'Project Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "RoleFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/role.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('permissions')\r\n\r\n  \r\n  .done()\r\n  .lock()"
            },
            {
                "name": "SkuFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sku.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('upc')\r\n  .required()\r\n  .ean()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "SprintFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sprint.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\r\n  'Sprint Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "StoreFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\r\n  'Store Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n  \r\n  .done()\r\n  .lock()"
            },
            {
                "name": "storyBookHttpInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/__base/interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn[]",
                "defaultValue": "[\r\n  (req, next) => {\r\n    if (req.url) {\r\n      req = req.clone({ url: `${API_BASEURL_FOR_STORYBOOK}/${req.url}` });\r\n      return next(req);\r\n    }\r\n    return next(req);\r\n  },\r\n]"
            },
            {
                "name": "TaskFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/task.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\r\n\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('difficulty')\r\n  .range(1, 10)\r\n\r\n  .add('due')\r\n  .date()\r\n\r\n  .add('startDate')\r\n  .date()\r\n\r\n  .add('finishDate')\r\n  .date()\r\n\r\n  .add('status')\r\n  .shortText()\r\n\r\n  .add('assignees')\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "TicketFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/ticket.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\r\n  'Ticket Form'\r\n)\r\n\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('difficulty')\r\n  .range(1, 10)\r\n\r\n  .add('due')\r\n  .date()\r\n\r\n  .add('startDate')\r\n  .date()\r\n\r\n  .add('finishDate')\r\n  .date()\r\n\r\n  .add('status')\r\n  .shortText()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "UserAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\r\n    .add('street')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('city')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('state')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('country')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('zip')\r\n    .required()\r\n    .shortText()\r\n\r\n    .done()\r\n    .lock()"
            },
            {
                "name": "UserEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\r\n  'UserEmail Form'\r\n)\r\n  .add('email')\r\n  .required()\r\n  .email()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "UserFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\r\n\r\n  .add('username')\r\n  .required()\r\n  .email()\r\n\r\n  .add('password')\r\n  .required()\r\n  .password()\r\n\r\n  .add('roles')\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "UserPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\r\n  'UserPhone Form'\r\n)\r\n  .add('phone')\r\n  .required()\r\n  .phone()\r\n\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "VideoFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/__base/video.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateVideoDto>(\r\n  'Video Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('url')\r\n  .required()\r\n  .url()\r\n\r\n  .done()\r\n  .lock()"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FormType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<Record<T, FormControl>>",
                "file": "libs/forms/src/lib/__base/form-type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategoryFormComponent>",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerAddressFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerEmailFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerPhoneFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DepartmentFormComponent>",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ManufacturerFormComponent>",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MessageFormComponent>",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationFormComponent>",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PermissionFormComponent>",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductFormComponent>",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductImageFormComponent>",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductVideoFormComponent>",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProjectFormComponent>",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RoleFormComponent>",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkuFormComponent>",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SprintFormComponent>",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoreFormComponent>",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskFormComponent>",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TicketFormComponent>",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserFormComponent>",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserAddressFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserEmailFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserPhoneFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategorySearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerAddressSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerEmailSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerPhoneSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DepartmentSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ManufacturerSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MessageSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PermissionSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductImageSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductVideoSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProjectSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RoleSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkuSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SprintSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoreSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TicketSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserAddressSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserEmailSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserPhoneSearchComponent>",
                "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AddressFormComponent>",
                "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<EmailFormComponent>",
                "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ImageFormComponent>",
                "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PhoneFormComponent>",
                "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<VideoFormComponent>",
                "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/forms/src/lib/form-builders/__base/address.ts": [
                {
                    "name": "AddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/__base/address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateAddressDto>(\r\n  'Address Form'\r\n)\r\n  .add('street')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('city')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('state')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('country')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('zip')\r\n  .required()\r\n  .shortText()\r\n  \r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/__base/base-url.ts": [
                {
                    "name": "API_BASEURL_FOR_STORYBOOK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/__base/base-url.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'http://localhost:3000'"
                }
            ],
            "libs/forms/src/lib/form-builders/category.ts": [
                {
                    "name": "CategoryFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/category.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-address.ts": [
                {
                    "name": "CustomerAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\r\n    .add('street')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('city')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('state')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('country')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('zip')\r\n    .required()\r\n    .shortText()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-email.ts": [
                {
                    "name": "CustomerEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\r\n    .add('email')\r\n    .required()\r\n    .email()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer.ts": [
                {
                    "name": "CustomerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\r\n  'Customer Form'\r\n)\r\n\r\n  .add('username')\r\n  .required()\r\n  .email()\r\n\r\n  .add('password')\r\n  .required()\r\n  .password()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-phone.ts": [
                {
                    "name": "CustomerPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\r\n    .add('phone')\r\n    .required()\r\n    .phone()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/department.ts": [
                {
                    "name": "DepartmentFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/department.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\r\n  'Department Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  \r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/__base/email.ts": [
                {
                    "name": "EmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/__base/email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateEmailDto>(\r\n  'Email Form'\r\n)\r\n  .add('email')\r\n  .email()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'category name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategoryFormComponent>",
                    "defaultValue": "{\r\n  component: CategoryFormComponent,\r\n  title: 'CategoryFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n    const passwordToggle = findButton('password-toggle');\r\n    \r\n    // Form Fields\r\n    const username = findInput('username');\r\n    const password = findInput('password');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(username).toBeTruthy();\r\n    expect(password).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(username, 'user@domain.com');\r\n      await type(password, 'Password123.!');\r\n\r\n      await click(passwordToggle);\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerFormComponent>",
                    "defaultValue": "{\r\n  component: CustomerFormComponent,\r\n  title: 'CustomerFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerAddressFormComponent>",
                    "defaultValue": "{\r\n  component: CustomerAddressFormComponent,\r\n  title: 'CustomerAddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'some@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerEmailFormComponent>",
                    "defaultValue": "{\r\n  component: CustomerEmailFormComponent,\r\n  title: 'CustomerEmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739001019');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerPhoneFormComponent>",
                    "defaultValue": "{\r\n  component: CustomerPhoneFormComponent,\r\n  title: 'CustomerPhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/department/department-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'department name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DepartmentFormComponent>",
                    "defaultValue": "{\r\n  component: DepartmentFormComponent,\r\n  title: 'DepartmentFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'manufacturer name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ManufacturerFormComponent>",
                    "defaultValue": "{\r\n  component: ManufacturerFormComponent,\r\n  title: 'ManufacturerFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/message/message-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'message name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MessageFormComponent>",
                    "defaultValue": "{\r\n  component: MessageFormComponent,\r\n  title: 'MessageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'notification name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationFormComponent>",
                    "defaultValue": "{\r\n  component: NotificationFormComponent,\r\n  title: 'NotificationFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'permission name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PermissionFormComponent>",
                    "defaultValue": "{\r\n  component: PermissionFormComponent,\r\n  title: 'PermissionFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product/product-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductFormComponent>",
                    "defaultValue": "{\r\n  component: ProductFormComponent,\r\n  title: 'ProductFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product-image name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductImageFormComponent>",
                    "defaultValue": "{\r\n  component: ProductImageFormComponent,\r\n  title: 'ProductImageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'product-video name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductVideoFormComponent>",
                    "defaultValue": "{\r\n  component: ProductVideoFormComponent,\r\n  title: 'ProductVideoFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/project/project-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'project name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProjectFormComponent>",
                    "defaultValue": "{\r\n  component: ProjectFormComponent,\r\n  title: 'ProjectFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/role/role-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'role name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RoleFormComponent>",
                    "defaultValue": "{\r\n  component: RoleFormComponent,\r\n  title: 'RoleFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'sku name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkuFormComponent>",
                    "defaultValue": "{\r\n  component: SkuFormComponent,\r\n  title: 'SkuFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'sprint name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SprintFormComponent>",
                    "defaultValue": "{\r\n  component: SprintFormComponent,\r\n  title: 'SprintFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/store/store-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'store name');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoreFormComponent>",
                    "defaultValue": "{\r\n  component: StoreFormComponent,\r\n  title: 'StoreFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/task/task-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const description = findInput('description');\r\n    const due = findInput('due');\r\n    const startDate = findInput('startDate');\r\n    const finishDate = findInput('finishDate');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(description).toBeTruthy();\r\n    expect(due).toBeTruthy();\r\n    expect(startDate).toBeTruthy();\r\n    expect(finishDate).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type task name here');\r\n      await type(description, 'Type task description here');\r\n\r\n      await type(due, '5/14/2024');\r\n      await type(startDate, '5/16/2024');\r\n      await type(finishDate, '5/20/2024');\r\n\r\n      await await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskFormComponent>",
                    "defaultValue": "{\r\n  component: TaskFormComponent,\r\n  title: 'TaskFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const description = findInput('description');\r\n    const due = findInput('due');\r\n    const startDate = findInput('startDate');\r\n    const finishDate = findInput('finishDate');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(description).toBeTruthy();\r\n    expect(due).toBeTruthy();\r\n    expect(startDate).toBeTruthy();\r\n    expect(finishDate).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type task name here');\r\n      await type(description, 'Type task description here');\r\n\r\n      await type(due, '5/14/2024');\r\n      await type(startDate, '5/16/2024');\r\n      await type(finishDate, '5/20/2024');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TicketFormComponent>",
                    "defaultValue": "{\r\n  component: TicketFormComponent,\r\n  title: 'TicketFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user/user-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n    const passwordToggle = findButton('password-toggle');\r\n\r\n    // Form Fields\r\n    const username = findInput('username');\r\n    const password = findInput('password');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(username).toBeTruthy();\r\n    expect(password).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(username, 'user@gmail.com');\r\n      await type(password, 'Password123.!');\r\n\r\n      await click(passwordToggle);\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserFormComponent>",
                    "defaultValue": "{\r\n  component: UserFormComponent,\r\n  title: 'UserFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserAddressFormComponent>",
                    "defaultValue": "{\r\n  component: UserAddressFormComponent,\r\n  title: 'UserAddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'email@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserEmailFormComponent>",
                    "defaultValue": "{\r\n  component: UserEmailFormComponent,\r\n  title: 'UserEmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739600015');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserPhoneFormComponent>",
                    "defaultValue": "{\r\n  component: UserPhoneFormComponent,\r\n  title: 'UserPhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('category');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'category 1'],\n      [2, 'category 2'],\n      [3, 'category 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategorySearchComponent>",
                    "defaultValue": "{\n  component: CategorySearchComponent,\n  title: 'CategorySearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Category: 'Categories',\n            },\n            entityMetadata: {\n              Category: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customer');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customer 1'],\n      [2, 'customer 2'],\n      [3, 'customer 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerSearchComponent>",
                    "defaultValue": "{\n  component: CustomerSearchComponent,\n  title: 'CustomerSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Customer: 'Customers',\n            },\n            entityMetadata: {\n              Customer: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerAddress');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerAddress 1'],\n      [2, 'customerAddress 2'],\n      [3, 'customerAddress 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerAddressSearchComponent>",
                    "defaultValue": "{\n  component: CustomerAddressSearchComponent,\n  title: 'CustomerAddressSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerAddress: 'CustomerAddresss',\n            },\n            entityMetadata: {\n              CustomerAddress: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerEmail');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerEmail 1'],\n      [2, 'customerEmail 2'],\n      [3, 'customerEmail 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerEmailSearchComponent>",
                    "defaultValue": "{\n  component: CustomerEmailSearchComponent,\n  title: 'CustomerEmailSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerEmail: 'CustomerEmails',\n            },\n            entityMetadata: {\n              CustomerEmail: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('customerPhone');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'customerPhone 1'],\n      [2, 'customerPhone 2'],\n      [3, 'customerPhone 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerPhoneSearchComponent>",
                    "defaultValue": "{\n  component: CustomerPhoneSearchComponent,\n  title: 'CustomerPhoneSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              CustomerPhone: 'CustomerPhones',\n            },\n            entityMetadata: {\n              CustomerPhone: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('department');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'department 1'],\n      [2, 'department 2'],\n      [3, 'department 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DepartmentSearchComponent>",
                    "defaultValue": "{\n  component: DepartmentSearchComponent,\n  title: 'DepartmentSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Department: 'Departments',\n            },\n            entityMetadata: {\n              Department: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('manufacturer');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'manufacturer 1'],\n      [2, 'manufacturer 2'],\n      [3, 'manufacturer 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ManufacturerSearchComponent>",
                    "defaultValue": "{\n  component: ManufacturerSearchComponent,\n  title: 'ManufacturerSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Manufacturer: 'Manufacturers',\n            },\n            entityMetadata: {\n              Manufacturer: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('message');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'message 1'],\n      [2, 'message 2'],\n      [3, 'message 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MessageSearchComponent>",
                    "defaultValue": "{\n  component: MessageSearchComponent,\n  title: 'MessageSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Message: 'Messages',\n            },\n            entityMetadata: {\n              Message: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('notification');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'notification 1'],\n      [2, 'notification 2'],\n      [3, 'notification 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationSearchComponent>",
                    "defaultValue": "{\n  component: NotificationSearchComponent,\n  title: 'NotificationSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Notification: 'Notifications',\n            },\n            entityMetadata: {\n              Notification: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('permission');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'permission 1'],\n      [2, 'permission 2'],\n      [3, 'permission 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PermissionSearchComponent>",
                    "defaultValue": "{\n  component: PermissionSearchComponent,\n  title: 'PermissionSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Permission: 'Permissions',\n            },\n            entityMetadata: {\n              Permission: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('product');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'product 1'],\n      [2, 'product 2'],\n      [3, 'product 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductSearchComponent>",
                    "defaultValue": "{\n  component: ProductSearchComponent,\n  title: 'ProductSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Product: 'Products',\n            },\n            entityMetadata: {\n              Product: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('productImage');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'productImage 1'],\n      [2, 'productImage 2'],\n      [3, 'productImage 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductImageSearchComponent>",
                    "defaultValue": "{\n  component: ProductImageSearchComponent,\n  title: 'ProductImageSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              ProductImage: 'ProductImages',\n            },\n            entityMetadata: {\n              ProductImage: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('productVideo');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'productVideo 1'],\n      [2, 'productVideo 2'],\n      [3, 'productVideo 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductVideoSearchComponent>",
                    "defaultValue": "{\n  component: ProductVideoSearchComponent,\n  title: 'ProductVideoSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              ProductVideo: 'ProductVideoes',\n            },\n            entityMetadata: {\n              ProductVideo: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('project');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'project 1'],\n      [2, 'project 2'],\n      [3, 'project 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProjectSearchComponent>",
                    "defaultValue": "{\n  component: ProjectSearchComponent,\n  title: 'ProjectSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Project: 'Projects',\n            },\n            entityMetadata: {\n              Project: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('role');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'role 1'],\n      [2, 'role 2'],\n      [3, 'role 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RoleSearchComponent>",
                    "defaultValue": "{\n  component: RoleSearchComponent,\n  title: 'RoleSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Role: 'Roles',\n            },\n            entityMetadata: {\n              Role: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('sku');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'sku 1'],\n      [2, 'sku 2'],\n      [3, 'sku 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkuSearchComponent>",
                    "defaultValue": "{\n  component: SkuSearchComponent,\n  title: 'SkuSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Sku: 'Skus',\n            },\n            entityMetadata: {\n              Sku: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('sprint');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'sprint 1'],\n      [2, 'sprint 2'],\n      [3, 'sprint 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SprintSearchComponent>",
                    "defaultValue": "{\n  component: SprintSearchComponent,\n  title: 'SprintSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Sprint: 'Sprints',\n            },\n            entityMetadata: {\n              Sprint: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('store');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'store 1'],\n      [2, 'store 2'],\n      [3, 'store 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoreSearchComponent>",
                    "defaultValue": "{\n  component: StoreSearchComponent,\n  title: 'StoreSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Store: 'Stores',\n            },\n            entityMetadata: {\n              Store: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('task');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'task 1'],\n      [2, 'task 2'],\n      [3, 'task 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskSearchComponent>",
                    "defaultValue": "{\n  component: TaskSearchComponent,\n  title: 'TaskSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Task: 'Tasks',\n            },\n            entityMetadata: {\n              Task: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('ticket');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'ticket 1'],\n      [2, 'ticket 2'],\n      [3, 'ticket 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TicketSearchComponent>",
                    "defaultValue": "{\n  component: TicketSearchComponent,\n  title: 'TicketSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              Ticket: 'Tickets',\n            },\n            entityMetadata: {\n              Ticket: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('user');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'user 1'],\n      [2, 'user 2'],\n      [3, 'user 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserSearchComponent>",
                    "defaultValue": "{\n  component: UserSearchComponent,\n  title: 'UserSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              User: 'Users',\n            },\n            entityMetadata: {\n              User: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userAddress');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userAddress 1'],\n      [2, 'userAddress 2'],\n      [3, 'userAddress 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserAddressSearchComponent>",
                    "defaultValue": "{\n  component: UserAddressSearchComponent,\n  title: 'UserAddressSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserAddress: 'UserAddresss',\n            },\n            entityMetadata: {\n              UserAddress: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userEmail');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userEmail 1'],\n      [2, 'userEmail 2'],\n      [3, 'userEmail 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserEmailSearchComponent>",
                    "defaultValue": "{\n  component: UserEmailSearchComponent,\n  title: 'UserEmailSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserEmail: 'UserEmails',\n            },\n            entityMetadata: {\n              UserEmail: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const searchInput = findInput('userPhone');\n\n    const search = async (searchValue: string) => {\n      await userEvent.clear(searchInput);\n      await type(searchInput, searchValue);\n    };\n\n    for (const [i, s] of [\n      [1, 'userPhone 1'],\n      [2, 'userPhone 2'],\n      [3, 'userPhone 3'],\n      [4, '1'],\n      [5, '2'],\n      [6, '3'],\n    ] as [number, string][]) {\n      setTimeout(async () => {\n        await search(s);\n      }, i * 3000);\n    }\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserPhoneSearchComponent>",
                    "defaultValue": "{\n  component: UserPhoneSearchComponent,\n  title: 'UserPhoneSearchComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideHttpClient(withInterceptors(storyBookHttpInterceptor)),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideStore([]),\n        provideEffects([]),\n        provideEntityData(\n          {\n            pluralNames: {\n              UserPhone: 'UserPhones',\n            },\n            entityMetadata: {\n              UserPhone: {},\n            },\n          },\n          withEffects()\n        ),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const street = findInput('street');\r\n    const city = findInput('city');\r\n    const state = findInput('state');\r\n    const country = findInput('country');\r\n    const zip = findInput('zip');\r\n\r\n    // Valdiate buttons\r\n    expect(street).toBeTruthy();\r\n    expect(city).toBeTruthy();\r\n    expect(state).toBeTruthy();\r\n    expect(country).toBeTruthy();\r\n    expect(zip).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(street, 'N Damen');\r\n      await type(city, 'Chicago');\r\n      await type(state, 'IL');\r\n      await type(country, 'US');\r\n      await type(zip, '60645');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AddressFormComponent>",
                    "defaultValue": "{\r\n  component: AddressFormComponent,\r\n  title: 'AddressFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const email = findInput('email');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(email).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(email, 'email@gmail.com');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<EmailFormComponent>",
                    "defaultValue": "{\r\n  component: EmailFormComponent,\r\n  title: 'EmailFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const url = findInput('url');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(url).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type image name');\r\n      await type(url, 'https://cdn.com/image.png');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ImageFormComponent>",
                    "defaultValue": "{\r\n  component: ImageFormComponent,\r\n  title: 'ImageFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const phone = findInput('phone');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(phone).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(phone, '+17739600016');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PhoneFormComponent>",
                    "defaultValue": "{\r\n  component: PhoneFormComponent,\r\n  title: 'PhoneFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  play: async ({ canvasElement }) => {\r\n    const canvas = within(canvasElement);\r\n\r\n    const findButton = (testid: string) => canvas.getByTestId(testid);\r\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\r\n\r\n    const type = async (element: any, value: any) =>\r\n      await userEvent.type(element, value, { delay: 100 });\r\n\r\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\r\n\r\n    // Form Buttons\r\n    const submitButton = findButton('submit');\r\n    const resetButton = findButton('reset');\r\n\r\n    // Form Fields\r\n    const name = findInput('name');\r\n    const url = findInput('url');\r\n\r\n    // Valdiate buttons\r\n    expect(submitButton).toBeTruthy();\r\n    expect(resetButton).toBeTruthy();\r\n\r\n    // Validte input Elements\r\n    expect(name).toBeTruthy();\r\n    expect(url).toBeTruthy();\r\n\r\n    const submitForm = async () => {\r\n      await type(name, 'Type video name');\r\n      await type(url, 'https://cdn.com/video.mp4');\r\n\r\n      await click(submitButton);\r\n\r\n      await click(resetButton);\r\n    };\r\n\r\n    await submitForm();\r\n  },\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<VideoFormComponent>",
                    "defaultValue": "{\r\n  component: VideoFormComponent,\r\n  title: 'VideoFormComponent',\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        provideAnimations(),\r\n        provideMatFormFieldOptions({ appearance: 'outline' }),\r\n        provideErrorStateMatcher(),\r\n      ],\r\n    }),\r\n  ],\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-builders/__base/image.ts": [
                {
                    "name": "ImageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/__base/image.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateImageDto>(\r\n  'Image Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('url')\r\n  .url()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/manufacturer.ts": [
                {
                    "name": "ManufacturerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n    \r\n    .add('description')\r\n    .longText()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/message.ts": [
                {
                    "name": "MessageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/message.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\r\n  'Message Form'\r\n)\r\n\r\n  .add('message')\r\n  .required()\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/notification.ts": [
                {
                    "name": "NotificationFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/notification.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\r\n\r\n    .add('message')\r\n    .required()\r\n    .longText()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/permission.ts": [
                {
                    "name": "PermissionFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/permission.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\r\n  'Permission Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/__base/phone.ts": [
                {
                    "name": "PhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/__base/phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreatePhoneDto>(\r\n  'Phone Form'\r\n)\r\n  .add('phone')\r\n  .phone()\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product.ts": [
                {
                    "name": "ProductFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\r\n  'Product Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('upc')\r\n  .required()\r\n  .ean()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('category')\r\n\r\n  .add('department')\r\n\r\n  .add('manufacturers')\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-image.ts": [
                {
                    "name": "ProductImageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-image.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('url')\r\n    .required()\r\n    .url()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-video.ts": [
                {
                    "name": "ProductVideoFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-video.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\r\n    .add('name')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('url')\r\n    .required()\r\n    .url()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/project.ts": [
                {
                    "name": "ProjectFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/project.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\r\n  'Project Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/role.ts": [
                {
                    "name": "RoleFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/role.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('permissions')\r\n\r\n  \r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sku.ts": [
                {
                    "name": "SkuFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sku.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('upc')\r\n  .required()\r\n  .ean()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sprint.ts": [
                {
                    "name": "SprintFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sprint.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\r\n  'Sprint Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/store.ts": [
                {
                    "name": "StoreFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\r\n  'Store Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n  \r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/__base/interceptor.ts": [
                {
                    "name": "storyBookHttpInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/__base/interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn[]",
                    "defaultValue": "[\r\n  (req, next) => {\r\n    if (req.url) {\r\n      req = req.clone({ url: `${API_BASEURL_FOR_STORYBOOK}/${req.url}` });\r\n      return next(req);\r\n    }\r\n    return next(req);\r\n  },\r\n]"
                }
            ],
            "libs/forms/src/lib/form-builders/task.ts": [
                {
                    "name": "TaskFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/task.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\r\n\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('difficulty')\r\n  .range(1, 10)\r\n\r\n  .add('due')\r\n  .date()\r\n\r\n  .add('startDate')\r\n  .date()\r\n\r\n  .add('finishDate')\r\n  .date()\r\n\r\n  .add('status')\r\n  .shortText()\r\n\r\n  .add('assignees')\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/ticket.ts": [
                {
                    "name": "TicketFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/ticket.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\r\n  'Ticket Form'\r\n)\r\n\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('description')\r\n  .longText()\r\n\r\n  .add('difficulty')\r\n  .range(1, 10)\r\n\r\n  .add('due')\r\n  .date()\r\n\r\n  .add('startDate')\r\n  .date()\r\n\r\n  .add('finishDate')\r\n  .date()\r\n\r\n  .add('status')\r\n  .shortText()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-address.ts": [
                {
                    "name": "UserAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\r\n    .add('street')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('city')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('state')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('country')\r\n    .required()\r\n    .shortText()\r\n\r\n    .add('zip')\r\n    .required()\r\n    .shortText()\r\n\r\n    .done()\r\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-email.ts": [
                {
                    "name": "UserEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\r\n  'UserEmail Form'\r\n)\r\n  .add('email')\r\n  .required()\r\n  .email()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user.ts": [
                {
                    "name": "UserFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\r\n\r\n  .add('username')\r\n  .required()\r\n  .email()\r\n\r\n  .add('password')\r\n  .required()\r\n  .password()\r\n\r\n  .add('roles')\r\n  .required()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-phone.ts": [
                {
                    "name": "UserPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\r\n  'UserPhone Form'\r\n)\r\n  .add('phone')\r\n  .required()\r\n  .phone()\r\n\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/__base/video.ts": [
                {
                    "name": "VideoFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/__base/video.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateVideoDto>(\r\n  'Video Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n\r\n  .add('url')\r\n  .required()\r\n  .url()\r\n\r\n  .done()\r\n  .lock()"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/forms/src/lib/__base/form-type.ts": [
                {
                    "name": "FormType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<Record<T, FormControl>>",
                    "file": "libs/forms/src/lib/__base/form-type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategoryFormComponent>",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerAddressFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerEmailFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerPhoneFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/department/department-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DepartmentFormComponent>",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ManufacturerFormComponent>",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/message/message-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MessageFormComponent>",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationFormComponent>",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PermissionFormComponent>",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product/product-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductImageFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductVideoFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/project/project-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProjectFormComponent>",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/role/role-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RoleFormComponent>",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkuFormComponent>",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SprintFormComponent>",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/store/store-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoreFormComponent>",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/task/task-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskFormComponent>",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TicketFormComponent>",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user/user-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserAddressFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserEmailFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserPhoneFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategorySearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerAddressSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerEmailSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerPhoneSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DepartmentSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ManufacturerSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MessageSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PermissionSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductImageSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductVideoSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProjectSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RoleSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkuSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SprintSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoreSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TicketSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserAddressSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserEmailSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserPhoneSearchComponent>",
                    "file": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AddressFormComponent>",
                    "file": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<EmailFormComponent>",
                    "file": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ImageFormComponent>",
                    "file": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PhoneFormComponent>",
                    "file": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<VideoFormComponent>",
                    "file": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "libs/forms/src/lib/__base/base-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/__base/base-url.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_BASEURL_FOR_STORYBOOK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/__base/interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "storyBookHttpInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/__base/address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/__base/email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/__base/image.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/__base/phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/__base/video.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VideoFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/category.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CategoryFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/department.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DepartmentFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManufacturerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/message.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MessageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/notification.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotificationFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/permission.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PermissionFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-image.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductImageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-video.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductVideoFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/project.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/role.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RoleFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sku.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SkuFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sprint.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SprintFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StoreFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/task.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TaskFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/ticket.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TicketFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/address/address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/address/address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddressFormComponent",
                "coveragePercent": 58,
                "coverageCount": "7/12",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/email/email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/email/email-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailFormComponent",
                "coveragePercent": 58,
                "coverageCount": "7/12",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/image/image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/image/image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ImageFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/phone/phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhoneFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/video/video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/__base/video/video-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VideoFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerAddressFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerEmailFormComponent",
                "coveragePercent": 58,
                "coverageCount": "7/12",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerPhoneFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DepartmentFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManufacturerFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PermissionFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductImageFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductVideoFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoleFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkuFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprintFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoreFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserAddressFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEmailFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserPhoneFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/__base/base-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/category/category-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/category/category-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategorySearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-address/customer-address-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerAddressSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-email/customer-email-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerEmailSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer-phone/customer-phone-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerPhoneSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer/customer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/customer/customer-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/department/department-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/department/department-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DepartmentSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/manufacturer/manufacturer-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManufacturerSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/message/message-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/message/message-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/notification/notification-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/notification/notification-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/permission/permission-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/permission/permission-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PermissionSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-image/product-image-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductImageSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product-video/product-video-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductVideoSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product/product-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/product/product-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/project/project-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/project/project-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/role/role-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/role/role-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoleSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sku/sku-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sku/sku-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkuSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/sprint/sprint-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprintSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/store/store-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/store/store-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoreSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/task/task-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/task/task-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/ticket/ticket-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-address/user-address-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserAddressSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-email/user-email-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEmailSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user-phone/user-phone-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserPhoneSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user/user-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/search-inputs/user/user-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}