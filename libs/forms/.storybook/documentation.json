{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BaseFormComponent",
            "id": "component-BaseFormComponent-c46226691600c558feb723c8ebf0b219f2929ef69c86a4d87de2a4e81afb74dc6329ec45d961fbdf2d1b0a938d915c622b213405b31f001d2f51618da3d5f448",
            "file": "libs/forms/src/lib/__base/base-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n"
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1306,
                                "end": 1310,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1300,
                                "end": 1305,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1334,
                                "end": 1341,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n"
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n"
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { FormComponent } from '@mdtx/material/form';\r\nimport { Observable, debounceTime } from 'rxjs';\r\n\r\n@Component({ template: '' })\r\nexport class BaseFormComponent implements FormComponent, AfterViewInit {\r\n  /**\r\n   * FormGroup\r\n   */\r\n  @Input() resourceFormGroup!: FormGroup;\r\n\r\n  /**\r\n   * Emits form value when form submit\r\n   */\r\n  @Output() submitEvent = new EventEmitter();\r\n\r\n  /**\r\n   * Subscribe form value change\r\n   */\r\n  valueChange$!: Observable<any>;\r\n\r\n  /**\r\n   * Subscribe form status change\r\n   */\r\n  statusChange$!: Observable<any>;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.valueChange$ = this.resourceFormGroup?.valueChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n    this.statusChange$ = this.resourceFormGroup?.statusChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submit form\r\n   */\r\n  formSubmit() {\r\n    console.log('Form is submitting: ', this.resourceFormGroup.value);\r\n    this.submitEvent.emit(this.resourceFormGroup.value);\r\n  }\r\n\r\n  /**\r\n   * Reset form\r\n   */\r\n  formReset() {\r\n    this.resourceFormGroup.reset();\r\n  }\r\n\r\n  /**\r\n   * Get the formControl from the formGroup\r\n   * @param name formControlName\r\n   * @returns\r\n   */\r\n  control(name: string) {\r\n    const formControl = this.resourceFormGroup.get(name) as FormControl;\r\n    if (!formControl) throw new Error(`${name} |  FormControl is not found!`);\r\n    return formControl;\r\n  }\r\n\r\n  isInvalid() {\r\n    return this.resourceFormGroup?.invalid;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "FormComponent",
                "AfterViewInit"
            ]
        },
        {
            "name": "CategoryFormComponent",
            "id": "component-CategoryFormComponent-a495e468c80e91daae7c502bad5aaf900ee2ce71eb4d1e6340d92ea69928d942a8d1dc65e1357370b202d50096fed9b5c78f06780853e768ec51c2ea60183ac8",
            "file": "libs/forms/src/lib/form-components/category/category-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-category-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./category-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "new FormGroup({\r\n      ...CategoryFormBuilder.controls(),\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup<FormType<ICreateCategoryDto>>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        164
                    ]
                },
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1306,
                                "end": 1310,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1300,
                                "end": 1305,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1334,
                                "end": 1341,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\r\nimport { BaseFormComponent, FormType } from '../../__base';\r\nimport { ICreateCategoryDto } from '@mdtx/common';\r\nimport { CategoryFormBuilder } from '../../form-builders';\r\n\r\n@Component({\r\n  selector: 'mdtx-category-form',\r\n  standalone: true,\r\n  imports: [CommonFormModule, InputTextComponent],\r\n  templateUrl: './category-form.component.html',\r\n  styleUrl: './category-form.component.scss',\r\n})\r\nexport class CategoryFormComponent extends BaseFormComponent {\r\n  override resourceFormGroup: FormGroup<FormType<ICreateCategoryDto>> =\r\n    new FormGroup({\r\n      ...CategoryFormBuilder.controls(),\r\n    });\r\n}\r\n",
            "styleUrl": "./category-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" [formGroup]=\"resourceFormGroup\" novalidate>\r\n  <!-- Form Inputs  -->\r\n  <mdtx-input-text\r\n    label=\"Category Name\"\r\n    [inputControl]=\"control('name')\"\r\n  ></mdtx-input-text>\r\n\r\n  <!-- Form actions -->\r\n  <div class=\"form-actions\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"formSubmit()\">\r\n      Save Category\r\n    </button>\r\n    <button mat-stroked-button color=\"primary\" (click)=\"formReset()\">\r\n      Reset\r\n    </button>\r\n  </div>\r\n</form>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "CategoryFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/category.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "CustomerAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "CustomerEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\n    .add('email')\n    .required()\n    .email()\n\n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
            },
            {
                "name": "CustomerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\n  'Customer Form'\n)\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n  \n  .done()\n  .lock()"
            },
            {
                "name": "CustomerPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\n    .add('phone')\n    .required()\n    .phone()\n    \n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
            },
            {
                "name": "DepartmentFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/department.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\n  'Department Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n  .done()\n  .lock()"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    // expect(canvas.getByText(/category-form works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "ManufacturerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\n    .add('name')\n    .required()\n    .shortText()\n    .add('description')\n    .longText()\n\n    .done()\n    .lock()"
            },
            {
                "name": "MessageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/message.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\n  'Message Form'\n)\n\n  .add('message')\n  .required()\n  .longText()\n\n  .add('source')\n  .required()\n\n  .add('target')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategoryFormComponent>",
                "defaultValue": "{\n  component: CategoryFormComponent,\n  title: 'CategoryFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "NotificationFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/notification.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\n\n    .add('message')\n    .required()\n    .longText()\n\n    .add('source')\n    .required()\n\n    .add('target')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "PermissionFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/permission.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\n  'Permission Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .done()\n  .lock()"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "ProductFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\n  'Product Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('category')\n\n  .add('department')\n\n  .add('manufacturers')\n\n  .done()\n  .lock()"
            },
            {
                "name": "ProductImageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-image.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "ProductVideoFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-video.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n    .done()\n    .lock()"
            },
            {
                "name": "ProjectFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/project.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\n  'Project Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .done()\n  .lock()"
            },
            {
                "name": "RoleFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/role.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('permissions')\n\n  .done()\n  .lock()"
            },
            {
                "name": "SkuFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sku.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('product')\n\n  .done()\n  .lock()"
            },
            {
                "name": "SprintFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sprint.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\n  'Sprint Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('project')\n\n  .done()\n  .lock()"
            },
            {
                "name": "StoreFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\n  'Store Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n  \n  .done()\n  .lock()"
            },
            {
                "name": "TaskFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/task.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('sprint')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
            },
            {
                "name": "TicketFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/ticket.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\n  'Ticket Form'\n)\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('customer')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "UserEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\n  'UserEmail Form'\n)\n  .add('email')\n  .required()\n  .email()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\n  'UserPhone Form'\n)\n  .add('phone')\n  .required()\n  .phone()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FormType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<Record<T, FormControl>>",
                "file": "libs/forms/src/lib/__base/form-type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategoryFormComponent>",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/forms/src/lib/form-builders/category.ts": [
                {
                    "name": "CategoryFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/category.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-address.ts": [
                {
                    "name": "CustomerAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-email.ts": [
                {
                    "name": "CustomerEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\n    .add('email')\n    .required()\n    .email()\n\n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer.ts": [
                {
                    "name": "CustomerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\n  'Customer Form'\n)\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n  \n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-phone.ts": [
                {
                    "name": "CustomerPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\n    .add('phone')\n    .required()\n    .phone()\n    \n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/department.ts": [
                {
                    "name": "DepartmentFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/department.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\n  'Department Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    // expect(canvas.getByText(/category-form works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategoryFormComponent>",
                    "defaultValue": "{\n  component: CategoryFormComponent,\n  title: 'CategoryFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/forms/src/lib/form-builders/manufacturer.ts": [
                {
                    "name": "ManufacturerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\n    .add('name')\n    .required()\n    .shortText()\n    .add('description')\n    .longText()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/message.ts": [
                {
                    "name": "MessageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/message.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\n  'Message Form'\n)\n\n  .add('message')\n  .required()\n  .longText()\n\n  .add('source')\n  .required()\n\n  .add('target')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/notification.ts": [
                {
                    "name": "NotificationFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/notification.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\n\n    .add('message')\n    .required()\n    .longText()\n\n    .add('source')\n    .required()\n\n    .add('target')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/permission.ts": [
                {
                    "name": "PermissionFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/permission.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\n  'Permission Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product.ts": [
                {
                    "name": "ProductFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\n  'Product Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('category')\n\n  .add('department')\n\n  .add('manufacturers')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-image.ts": [
                {
                    "name": "ProductImageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-image.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-video.ts": [
                {
                    "name": "ProductVideoFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-video.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/project.ts": [
                {
                    "name": "ProjectFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/project.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\n  'Project Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/role.ts": [
                {
                    "name": "RoleFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/role.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('permissions')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sku.ts": [
                {
                    "name": "SkuFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sku.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('product')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sprint.ts": [
                {
                    "name": "SprintFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sprint.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\n  'Sprint Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('project')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/store.ts": [
                {
                    "name": "StoreFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\n  'Store Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n  \n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/task.ts": [
                {
                    "name": "TaskFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/task.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('sprint')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/ticket.ts": [
                {
                    "name": "TicketFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/ticket.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\n  'Ticket Form'\n)\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('customer')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-address.ts": [
                {
                    "name": "UserAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-email.ts": [
                {
                    "name": "UserEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\n  'UserEmail Form'\n)\n  .add('email')\n  .required()\n  .email()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user.ts": [
                {
                    "name": "UserFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-phone.ts": [
                {
                    "name": "UserPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\n  'UserPhone Form'\n)\n  .add('phone')\n  .required()\n  .phone()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/forms/src/lib/__base/form-type.ts": [
                {
                    "name": "FormType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<Record<T, FormControl>>",
                    "file": "libs/forms/src/lib/__base/form-type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategoryFormComponent>",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "libs/forms/src/lib/__base/base-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseFormComponent",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/category.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CategoryFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/department.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DepartmentFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManufacturerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/message.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MessageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/notification.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotificationFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/permission.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PermissionFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-image.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductImageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-video.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductVideoFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/project.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/role.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RoleFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sku.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SkuFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sprint.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SprintFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StoreFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/task.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TaskFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/ticket.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TicketFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            }
        ]
    }
}