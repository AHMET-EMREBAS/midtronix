{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BaseFormComponent",
            "id": "component-BaseFormComponent-af042a04ee38d860ea131cd1df92637eba03d0bdb7bb929f511c3bd7d480c18311ab530dad43f0663d2a690427e4e144cfec62c5213314dd0636e3f1046910d6",
            "file": "libs/forms/src/lib/__base/base-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n"
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n"
                }
            ],
            "methodsClass": [
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n"
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n"
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { FormComponent } from '@mdtx/material/form';\r\nimport { Observable, debounceTime } from 'rxjs';\r\n\r\n@Component({ template: '' })\r\nexport class BaseFormComponent implements FormComponent, AfterViewInit {\r\n  /**\r\n   * FormGroup\r\n   */\r\n  @Input() resourceFormGroup = this.createFormGroup();\r\n\r\n  /**\r\n   * Emits form value when form submit\r\n   */\r\n  @Output() submitEvent = new EventEmitter();\r\n\r\n  /**\r\n   * Subscribe form value change\r\n   */\r\n  valueChange$!: Observable<any>;\r\n\r\n  /**\r\n   * Subscribe form status change\r\n   */\r\n  statusChange$!: Observable<any>;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.valueChange$ = this.resourceFormGroup?.valueChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n    this.statusChange$ = this.resourceFormGroup?.statusChanges.pipe(\r\n      debounceTime(600)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Submit form\r\n   */\r\n  formSubmit() {\r\n    console.log('Form is submitting: ', this.resourceFormGroup.value);\r\n    this.submitEvent.emit(this.resourceFormGroup.value);\r\n  }\r\n\r\n  /**\r\n   * Reset form\r\n   */\r\n  formReset() {\r\n    this.resourceFormGroup.reset();\r\n  }\r\n\r\n  /**\r\n   * Get the formControl from the formGroup\r\n   * @param name formControlName\r\n   * @returns\r\n   */\r\n  control(name: string) {\r\n    const formControl = this.resourceFormGroup.get(name) as FormControl;\r\n    if (!formControl) throw new Error(`${name} |  FormControl is not found!`);\r\n    return formControl;\r\n  }\r\n\r\n  createFormGroup(): FormGroup {\r\n    throw new Error('Not implemented!');\r\n  }\r\n\r\n  isFormInvalid() {\r\n    return this.resourceFormGroup.invalid;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "FormComponent",
                "AfterViewInit"
            ]
        },
        {
            "name": "CategoryFormComponent",
            "id": "component-CategoryFormComponent-e057b58cb1301e41e4c972a10f3f74977aa9467157db94463438c414d3016c78a213cc4a14314968a3619c52a58ff397338a273368e321c1fafe85b49e6e422e",
            "file": "libs/forms/src/lib/form-components/category/category-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-category-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./category-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { CategoryFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-category-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './category-form.component.html',\n  styleUrl: './category-form.component.scss',\n})\nexport class CategoryFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...CategoryFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./category-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Category Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Category\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "CustomerAddressFormComponent",
            "id": "component-CustomerAddressFormComponent-09d322a2f731930be8641e60cf985f9ebff8abba392700de651f9495e45ee5201593eaf3bc54c4c0423c6e459c02a8ebc62392c3a05f624a219866e7c1f0026b",
            "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-address-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { CustomerAddressFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-customer-address-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './customer-address-form.component.html',\n  styleUrl: './customer-address-form.component.scss',\n})\nexport class CustomerAddressFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...CustomerAddressFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./customer-address-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"CustomerAddress Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save CustomerAddress\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "CustomerEmailFormComponent",
            "id": "component-CustomerEmailFormComponent-bf4ccbb27768266e7930092dd928885d5f12a9fb9428804eb842ed7e06a8aa52f4f7f353089ab7fa358d15e7946dbf4f48ca86a411370dbc12939d3d8a7e1bef",
            "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-email-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-email-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { CustomerEmailFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-customer-email-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './customer-email-form.component.html',\n  styleUrl: './customer-email-form.component.scss',\n})\nexport class CustomerEmailFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...CustomerEmailFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./customer-email-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"CustomerEmail Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save CustomerEmail\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "CustomerFormComponent",
            "id": "component-CustomerFormComponent-746f294818a96444bab871a7f1fd074369b6ef5ad6d786b4fce0d5ffc4dd7bc3243e0d13909b60b24bbf27bde749fe49705ec2bdfbc2ffbaa303792c949f3424",
            "file": "libs/forms/src/lib/form-components/customer/customer-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { CustomerFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-customer-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './customer-form.component.html',\n  styleUrl: './customer-form.component.scss',\n})\nexport class CustomerFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...CustomerFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./customer-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<!-- username\npassword\nroles\nsupervisor -->\n<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Customer Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Customer\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "CustomerPhoneFormComponent",
            "id": "component-CustomerPhoneFormComponent-a4e50c0828e0c8a6c46d2e7801602c4d406dd4df713ac5742d867a70829bed51dda8ec8698eba646b92d3c84af845962597371fa4d5649253f1e41d944d942f3",
            "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-customer-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./customer-phone-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { CustomerPhoneFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-customer-phone-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './customer-phone-form.component.html',\n  styleUrl: './customer-phone-form.component.scss',\n})\nexport class CustomerPhoneFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...CustomerPhoneFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./customer-phone-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"CustomerPhone Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save CustomerPhone\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "DepartmentFormComponent",
            "id": "component-DepartmentFormComponent-1167b5d032169f91ffce91e43f516f737841808e6b10ea0eb1dbcdca9621ee3f1c3235ed8181637b95d7cc387da6627d6b4f12da90293a8f1a20626496d3378f",
            "file": "libs/forms/src/lib/form-components/department/department-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-department-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./department-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { DepartmentFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-department-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './department-form.component.html',\n  styleUrl: './department-form.component.scss',\n})\nexport class DepartmentFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...DepartmentFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./department-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Department Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Department\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ManufacturerFormComponent",
            "id": "component-ManufacturerFormComponent-ec6dc34a2f88e36afc708f9ca0febdd1f2ce90e0f20ded06d0e37cfa42897c6198cfc1b48dcf845a8ce55ea4da110fc40cf82901cb5d3667abd7f44fb825f03b",
            "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-manufacturer-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./manufacturer-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { ManufacturerFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-manufacturer-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './manufacturer-form.component.html',\n  styleUrl: './manufacturer-form.component.scss',\n})\nexport class ManufacturerFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...ManufacturerFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./manufacturer-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Manufacturer Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Manufacturer\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "MessageFormComponent",
            "id": "component-MessageFormComponent-367c9540bde54ba4d64d6245bc33becfa3afcf4b8d1d1470159de3f61c35e082a6a7fa0572ef5e61d92fb3ed431c2aa9af3ece94b040339a8c0dd5e524c85d4b",
            "file": "libs/forms/src/lib/form-components/message/message-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-message-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./message-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { MessageFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-message-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './message-form.component.html',\n  styleUrl: './message-form.component.scss',\n})\nexport class MessageFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...MessageFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./message-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Message Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Message\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "NotificationFormComponent",
            "id": "component-NotificationFormComponent-07cf3d1387385eac84e54c70723f1f7f51e7515c95f58230cebcab43ddb420237ac30e50857c8295d7d500faf20464cca363e0bf16033ecdbec0106378600641",
            "file": "libs/forms/src/lib/form-components/notification/notification-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-notification-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { NotificationFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-notification-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './notification-form.component.html',\n  styleUrl: './notification-form.component.scss',\n})\nexport class NotificationFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...NotificationFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./notification-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Notification Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Notification\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "PermissionFormComponent",
            "id": "component-PermissionFormComponent-9a48d09d5e4a17459d1a472a50fdf42161cef3dc4cd2080a23c56ab704acfb7dea966367faf8bd47a700cfe1c1f1ca7f03ff95b55ea78e43d6c08578d5e50b2b",
            "file": "libs/forms/src/lib/form-components/permission/permission-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-permission-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./permission-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { PermissionFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-permission-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './permission-form.component.html',\n  styleUrl: './permission-form.component.scss',\n})\nexport class PermissionFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...PermissionFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./permission-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Permission Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Permission\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ProductFormComponent",
            "id": "component-ProductFormComponent-dffa138e24b184c46eccf7c5067882f2ece557cf426be35b8e8585c74fd408e4e4d7404090e7f8f3e8250730a83bbd8f11c8ef32793a435d89bc8b6d998a79f5",
            "file": "libs/forms/src/lib/form-components/product/product-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { ProductFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-product-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './product-form.component.html',\n  styleUrl: './product-form.component.scss',\n})\nexport class ProductFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...ProductFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./product-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Product Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Product\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ProductImageFormComponent",
            "id": "component-ProductImageFormComponent-e97b20f65ce62579468a3d43204c96664e7a1ec628d9d79fb5dd390388be63b2879c6bf2b49137c54fc21cf8bb0943dda04220e973e053690bbc50443e2be7f1",
            "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-image-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-image-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { ProductImageFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-product-image-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './product-image-form.component.html',\n  styleUrl: './product-image-form.component.scss',\n})\nexport class ProductImageFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...ProductImageFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./product-image-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"ProductImage Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save ProductImage\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ProductVideoFormComponent",
            "id": "component-ProductVideoFormComponent-6a1231997f4580011529b0a745a5bd5073c3ccbd81ddb35cf194c08c5e0935932a38cd7e9bcb4e8534afc11c09970723b57a735b92dffde73acdbe6877e2d24c",
            "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-product-video-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./product-video-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { ProductVideoFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-product-video-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './product-video-form.component.html',\n  styleUrl: './product-video-form.component.scss',\n})\nexport class ProductVideoFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...ProductVideoFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./product-video-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"ProductVideo Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save ProductVideo\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "ProjectFormComponent",
            "id": "component-ProjectFormComponent-5d388c32db0090a31a479f7842b1d1c5a4a0211b4cd49676b0a84e2e2ec2ff712e83832a5c0f2e86e3be5b2e8c51ca6c4e3faecc0cf9fe36dac735d5039de64c",
            "file": "libs/forms/src/lib/form-components/project/project-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-project-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { ProjectFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-project-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './project-form.component.html',\n  styleUrl: './project-form.component.scss',\n})\nexport class ProjectFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...ProjectFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./project-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Project Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Project\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "RoleFormComponent",
            "id": "component-RoleFormComponent-c68d12f2efd57af23aca51563667735f6d672db23844ee0535025513868a0434da3955da191a97cc60cd5973664d734bc50af41206f21343bedc3b1775dd4a6c",
            "file": "libs/forms/src/lib/form-components/role/role-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-role-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./role-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { RoleFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-role-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './role-form.component.html',\n  styleUrl: './role-form.component.scss',\n})\nexport class RoleFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...RoleFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./role-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Role Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Role\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SkuFormComponent",
            "id": "component-SkuFormComponent-b0d1c2b048641d8a0984ea4512d4b681b97f7c8f47a116d5a0f9dc89bbca6abeb02d6ece31ae2575f338ea26c68d0b64ced3c743ff5d40d98d84eed631f02a14",
            "file": "libs/forms/src/lib/form-components/sku/sku-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sku-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sku-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { SkuFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-sku-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './sku-form.component.html',\n  styleUrl: './sku-form.component.scss',\n})\nexport class SkuFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...SkuFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./sku-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Sku Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Sku\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SprintFormComponent",
            "id": "component-SprintFormComponent-34d5bc2510af2528e55565bebd2ee506a1ae64083582f96328b00844d7bf9fe2bc80774a11805a43add783fac449ae16a0ee62623a78b59cca3330d5a1f1ca3f",
            "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-sprint-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sprint-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { SprintFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-sprint-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './sprint-form.component.html',\n  styleUrl: './sprint-form.component.scss',\n})\nexport class SprintFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...SprintFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./sprint-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Sprint Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Sprint\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "StoreFormComponent",
            "id": "component-StoreFormComponent-62726c75d96f6d04575517359a9528b786251e0b46c17b025a5025f5b87a69eec733f292f7dd72471e627b8a4117aab6f63022a8e290b4d3c1b289135cc95529",
            "file": "libs/forms/src/lib/form-components/store/store-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-store-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./store-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { StoreFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-store-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './store-form.component.html',\n  styleUrl: './store-form.component.scss',\n})\nexport class StoreFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...StoreFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./store-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Store Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Store\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "TaskFormComponent",
            "id": "component-TaskFormComponent-b77bcbb6bb8d816685c2c17cc1357d22b51e6f8b5f3dfc0bbf5af2579e0dbd3da5911f9e0c927dae1448dbe99f7885d0b2b9f20301d0265623e5f0cbdf6258f6",
            "file": "libs/forms/src/lib/form-components/task/task-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-task-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./task-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { TaskFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-task-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './task-form.component.html',\n  styleUrl: './task-form.component.scss',\n})\nexport class TaskFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...TaskFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./task-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Task Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Task\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "TicketFormComponent",
            "id": "component-TicketFormComponent-03038deab98465d2725c34e683ddcaff082f1dd104819de5511dfbfabd0ba5b56efaf51cbaefb2aae3c904e547c7d07fac6e4956333506efae3f8bbfcaab4c76",
            "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-ticket-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ticket-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { TicketFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-ticket-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './ticket-form.component.html',\n  styleUrl: './ticket-form.component.scss',\n})\nexport class TicketFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...TicketFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./ticket-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"Ticket Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save Ticket\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "UserAddressFormComponent",
            "id": "component-UserAddressFormComponent-a09b20b5523e19eff875c3431d99bebcafa82dc7e99a0445f971ec4d0da12de59cb0e8bc5a6fccd4435eeac332a4b673b15144fa9643e012730fcdd22bbad6d5",
            "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-address-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-address-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { UserAddressFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-user-address-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './user-address-form.component.html',\n  styleUrl: './user-address-form.component.scss',\n})\nexport class UserAddressFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...UserAddressFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./user-address-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"UserAddress Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save UserAddress\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "UserEmailFormComponent",
            "id": "component-UserEmailFormComponent-5841eda4925d49ce6a7fbb8eecf9b70f48c336086d06869f0e97db4d8eb2d248d15d14bcf2a574ef71544f3c6b5fba41c323fefadc05539a9f4800eb8a0379f1",
            "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-email-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-email-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { UserEmailFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-user-email-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './user-email-form.component.html',\n  styleUrl: './user-email-form.component.scss',\n})\nexport class UserEmailFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...UserEmailFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./user-email-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"UserEmail Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save UserEmail\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "UserFormComponent",
            "id": "component-UserFormComponent-39745313b2fcd547aaaa5dd95c939f664974dbe9fb133fbe022e053df30e1269f45b20af47332d7534519ba3cd7d39d9f369e31b1f84ea59fef9313a41917358",
            "file": "libs/forms/src/lib/form-components/user/user-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { UserFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-user-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './user-form.component.html',\n  styleUrl: './user-form.component.scss',\n})\nexport class UserFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...UserFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./user-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"User Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save User\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "UserPhoneFormComponent",
            "id": "component-UserPhoneFormComponent-928f8a982eb651c5db9006fccff37bfacba4d3ab5eb73dc5ec79f3df2ce9b9ae5b27fd46dd8dc7b6cdd06c8905882c78d9941e71fa7834b529fc88e4ce3d6bea",
            "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "mdtx-user-phone-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-phone-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "resourceFormGroup",
                    "defaultValue": "this.createFormGroup()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormGroup\n",
                    "description": "<p>FormGroup</p>\n",
                    "line": 17,
                    "type": "FormGroup",
                    "decorators": [],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "submitEvent",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmits form value when form submit\n",
                    "description": "<p>Emits form value when form submit</p>\n",
                    "line": 22,
                    "type": "EventEmitter",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "statusChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form status change</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nSubscribe form status change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "valueChange$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "<p>Subscribe form value change</p>\n",
                    "line": 27,
                    "rawdescription": "\n\nSubscribe form value change\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "createFormGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        164
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "control",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet the formControl from the formGroup\n",
                    "description": "<p>Get the formControl from the formGroup</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1319,
                                "end": 1323,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "name"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1313,
                                "end": 1318,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>formControlName</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1347,
                                "end": 1354,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ],
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReset form\n",
                    "description": "<p>Reset form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "formSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit form\n",
                    "description": "<p>Submit form</p>\n",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "isFormInvalid",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseFormComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonFormModule",
                    "type": "module"
                },
                {
                    "name": "InputTextComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CommonFormModule, InputTextComponent } from '@mdtx/material/form';\nimport { BaseFormComponent } from '../../__base';\nimport { UserPhoneFormBuilder } from '../../form-builders';\n\n@Component({\n  selector: 'mdtx-user-phone-form',\n  standalone: true,\n  imports: [CommonFormModule, InputTextComponent],\n  templateUrl: './user-phone-form.component.html',\n  styleUrl: './user-phone-form.component.scss',\n})\nexport class UserPhoneFormComponent extends BaseFormComponent {\n  override createFormGroup(): FormGroup {\n    return new FormGroup({\n      ...UserPhoneFormBuilder.controls(),\n    });\n  }\n}\n",
            "styleUrl": "./user-phone-form.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "BaseFormComponent"
            ],
            "templateData": "<form class=\"form-container\" novalidate=\"true\">\n  <!-- Form Inputs  -->\n  <mdtx-input-text\n    inputName=\"name\"\n    label=\"UserPhone Name\"\n    prefixIcon=\"category\"\n    [inputControl]=\"control('name')\"\n  ></mdtx-input-text>\n\n  <!-- Form actions -->\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"formSubmit()\"\n      [disabled]=\"isFormInvalid()\"\n      [attr.data-testid]=\"'submit'\"\n    >\n      Save UserPhone\n    </button>\n    <button\n      mat-stroked-button\n      color=\"primary\"\n      (click)=\"formReset()\"\n      [attr.data-testid]=\"'reset'\"\n    >\n      Reset\n    </button>\n  </div>\n</form>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "CategoryFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/category.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
            },
            {
                "name": "CustomerAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "CustomerEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\n    .add('email')\n    .required()\n    .email()\n\n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
            },
            {
                "name": "CustomerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\n  'Customer Form'\n)\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n  \n  .done()\n  .lock()"
            },
            {
                "name": "CustomerPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\n    .add('phone')\n    .required()\n    .phone()\n    \n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
            },
            {
                "name": "DepartmentFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/department.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\n  'Department Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n  .done()\n  .lock()"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'category name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-address name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-email name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-phone name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'department name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'manufacturer name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'message name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'notification name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'permission name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product-image name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product-video name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'project name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'role name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'sku name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'sprint name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'store name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'task name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'ticket name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-address name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-email name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-phone name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
            },
            {
                "name": "ManufacturerFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\n    .add('name')\n    .required()\n    .shortText()\n    .add('description')\n    .longText()\n\n    .done()\n    .lock()"
            },
            {
                "name": "MessageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/message.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\n  'Message Form'\n)\n\n  .add('message')\n  .required()\n  .longText()\n\n  .add('source')\n  .required()\n\n  .add('target')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategoryFormComponent>",
                "defaultValue": "{\n  component: CategoryFormComponent,\n  title: 'CategoryFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerFormComponent>",
                "defaultValue": "{\n  component: CustomerFormComponent,\n  title: 'CustomerFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerAddressFormComponent>",
                "defaultValue": "{\n  component: CustomerAddressFormComponent,\n  title: 'CustomerAddressFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerEmailFormComponent>",
                "defaultValue": "{\n  component: CustomerEmailFormComponent,\n  title: 'CustomerEmailFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CustomerPhoneFormComponent>",
                "defaultValue": "{\n  component: CustomerPhoneFormComponent,\n  title: 'CustomerPhoneFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DepartmentFormComponent>",
                "defaultValue": "{\n  component: DepartmentFormComponent,\n  title: 'DepartmentFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ManufacturerFormComponent>",
                "defaultValue": "{\n  component: ManufacturerFormComponent,\n  title: 'ManufacturerFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MessageFormComponent>",
                "defaultValue": "{\n  component: MessageFormComponent,\n  title: 'MessageFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NotificationFormComponent>",
                "defaultValue": "{\n  component: NotificationFormComponent,\n  title: 'NotificationFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PermissionFormComponent>",
                "defaultValue": "{\n  component: PermissionFormComponent,\n  title: 'PermissionFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductFormComponent>",
                "defaultValue": "{\n  component: ProductFormComponent,\n  title: 'ProductFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductImageFormComponent>",
                "defaultValue": "{\n  component: ProductImageFormComponent,\n  title: 'ProductImageFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProductVideoFormComponent>",
                "defaultValue": "{\n  component: ProductVideoFormComponent,\n  title: 'ProductVideoFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProjectFormComponent>",
                "defaultValue": "{\n  component: ProjectFormComponent,\n  title: 'ProjectFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RoleFormComponent>",
                "defaultValue": "{\n  component: RoleFormComponent,\n  title: 'RoleFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkuFormComponent>",
                "defaultValue": "{\n  component: SkuFormComponent,\n  title: 'SkuFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SprintFormComponent>",
                "defaultValue": "{\n  component: SprintFormComponent,\n  title: 'SprintFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoreFormComponent>",
                "defaultValue": "{\n  component: StoreFormComponent,\n  title: 'StoreFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TaskFormComponent>",
                "defaultValue": "{\n  component: TaskFormComponent,\n  title: 'TaskFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TicketFormComponent>",
                "defaultValue": "{\n  component: TicketFormComponent,\n  title: 'TicketFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserFormComponent>",
                "defaultValue": "{\n  component: UserFormComponent,\n  title: 'UserFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserAddressFormComponent>",
                "defaultValue": "{\n  component: UserAddressFormComponent,\n  title: 'UserAddressFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserEmailFormComponent>",
                "defaultValue": "{\n  component: UserEmailFormComponent,\n  title: 'UserEmailFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UserPhoneFormComponent>",
                "defaultValue": "{\n  component: UserPhoneFormComponent,\n  title: 'UserPhoneFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "NotificationFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/notification.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\n\n    .add('message')\n    .required()\n    .longText()\n\n    .add('source')\n    .required()\n\n    .add('target')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "PermissionFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/permission.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\n  'Permission Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .done()\n  .lock()"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "ProductFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\n  'Product Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('category')\n\n  .add('department')\n\n  .add('manufacturers')\n\n  .done()\n  .lock()"
            },
            {
                "name": "ProductImageFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-image.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "ProductVideoFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/product-video.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n    .done()\n    .lock()"
            },
            {
                "name": "ProjectFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/project.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\n  'Project Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .done()\n  .lock()"
            },
            {
                "name": "RoleFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/role.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('permissions')\n\n  .done()\n  .lock()"
            },
            {
                "name": "SkuFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sku.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('product')\n\n  .done()\n  .lock()"
            },
            {
                "name": "SprintFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/sprint.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\n  'Sprint Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('project')\n\n  .done()\n  .lock()"
            },
            {
                "name": "StoreFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\n  'Store Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n  \n  .done()\n  .lock()"
            },
            {
                "name": "TaskFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/task.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('sprint')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
            },
            {
                "name": "TicketFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/ticket.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\n  'Ticket Form'\n)\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('customer')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserAddressFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-address.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
            },
            {
                "name": "UserEmailFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-email.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\n  'UserEmail Form'\n)\n  .add('email')\n  .required()\n  .email()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n\n  .done()\n  .lock()"
            },
            {
                "name": "UserPhoneFormBuilder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\n  'UserPhone Form'\n)\n  .add('phone')\n  .required()\n  .phone()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "FormType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<Record<T, FormControl>>",
                "file": "libs/forms/src/lib/__base/form-type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategoryFormComponent>",
                "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerAddressFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerEmailFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CustomerPhoneFormComponent>",
                "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DepartmentFormComponent>",
                "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ManufacturerFormComponent>",
                "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MessageFormComponent>",
                "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NotificationFormComponent>",
                "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PermissionFormComponent>",
                "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductFormComponent>",
                "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductImageFormComponent>",
                "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProductVideoFormComponent>",
                "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProjectFormComponent>",
                "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RoleFormComponent>",
                "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkuFormComponent>",
                "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SprintFormComponent>",
                "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoreFormComponent>",
                "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TaskFormComponent>",
                "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TicketFormComponent>",
                "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserFormComponent>",
                "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserAddressFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserEmailFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UserPhoneFormComponent>",
                "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/forms/src/lib/form-builders/category.ts": [
                {
                    "name": "CategoryFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/category.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCategoryDto>(\r\n  'Category Form'\r\n)\r\n  .add('name')\r\n  .required()\r\n  .shortText()\r\n  .done()\r\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-address.ts": [
                {
                    "name": "CustomerAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerAddressDto>('CustomerAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-email.ts": [
                {
                    "name": "CustomerEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerEmailDto>('CustomerEmail Form')\n    .add('email')\n    .required()\n    .email()\n\n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer.ts": [
                {
                    "name": "CustomerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerDto>(\n  'Customer Form'\n)\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n  \n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/customer-phone.ts": [
                {
                    "name": "CustomerPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/customer-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateCustomerPhoneDto>('CustomerPhone Form')\n    .add('phone')\n    .required()\n    .phone()\n    \n    .add('owner')\n    .required()\n    \n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/department.ts": [
                {
                    "name": "DepartmentFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/department.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateDepartmentDto>(\n  'Department Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'category name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategoryFormComponent>",
                    "defaultValue": "{\n  component: CategoryFormComponent,\n  title: 'CategoryFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerFormComponent>",
                    "defaultValue": "{\n  component: CustomerFormComponent,\n  title: 'CustomerFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-address name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerAddressFormComponent>",
                    "defaultValue": "{\n  component: CustomerAddressFormComponent,\n  title: 'CustomerAddressFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-email name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerEmailFormComponent>",
                    "defaultValue": "{\n  component: CustomerEmailFormComponent,\n  title: 'CustomerEmailFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'customer-phone name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CustomerPhoneFormComponent>",
                    "defaultValue": "{\n  component: CustomerPhoneFormComponent,\n  title: 'CustomerPhoneFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/department/department-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'department name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DepartmentFormComponent>",
                    "defaultValue": "{\n  component: DepartmentFormComponent,\n  title: 'DepartmentFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'manufacturer name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ManufacturerFormComponent>",
                    "defaultValue": "{\n  component: ManufacturerFormComponent,\n  title: 'ManufacturerFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/message/message-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'message name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MessageFormComponent>",
                    "defaultValue": "{\n  component: MessageFormComponent,\n  title: 'MessageFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'notification name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NotificationFormComponent>",
                    "defaultValue": "{\n  component: NotificationFormComponent,\n  title: 'NotificationFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'permission name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PermissionFormComponent>",
                    "defaultValue": "{\n  component: PermissionFormComponent,\n  title: 'PermissionFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product/product-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductFormComponent>",
                    "defaultValue": "{\n  component: ProductFormComponent,\n  title: 'ProductFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product-image name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductImageFormComponent>",
                    "defaultValue": "{\n  component: ProductImageFormComponent,\n  title: 'ProductImageFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'product-video name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProductVideoFormComponent>",
                    "defaultValue": "{\n  component: ProductVideoFormComponent,\n  title: 'ProductVideoFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/project/project-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'project name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProjectFormComponent>",
                    "defaultValue": "{\n  component: ProjectFormComponent,\n  title: 'ProjectFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/role/role-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'role name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RoleFormComponent>",
                    "defaultValue": "{\n  component: RoleFormComponent,\n  title: 'RoleFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'sku name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkuFormComponent>",
                    "defaultValue": "{\n  component: SkuFormComponent,\n  title: 'SkuFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'sprint name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SprintFormComponent>",
                    "defaultValue": "{\n  component: SprintFormComponent,\n  title: 'SprintFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/store/store-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'store name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoreFormComponent>",
                    "defaultValue": "{\n  component: StoreFormComponent,\n  title: 'StoreFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/task/task-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'task name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TaskFormComponent>",
                    "defaultValue": "{\n  component: TaskFormComponent,\n  title: 'TaskFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'ticket name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TicketFormComponent>",
                    "defaultValue": "{\n  component: TicketFormComponent,\n  title: 'TicketFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user/user-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserFormComponent>",
                    "defaultValue": "{\n  component: UserFormComponent,\n  title: 'UserFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-address name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserAddressFormComponent>",
                    "defaultValue": "{\n  component: UserAddressFormComponent,\n  title: 'UserAddressFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-email name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserEmailFormComponent>",
                    "defaultValue": "{\n  component: UserEmailFormComponent,\n  title: 'UserEmailFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n\n    const findButton = (testid: string) => canvas.getByTestId(testid);\n    const findInput = (iname: string) => canvas.getByTestId(`input-${iname}`);\n\n    const type = async (element: any, value: any) =>\n      await userEvent.type(element, value, { delay: 100 });\n\n    const click = (element: any) => userEvent.click(element, { delay: 1000 });\n\n    // Form Buttons\n    const submitButton = findButton('submit');\n    const resetButton = findButton('reset');\n\n    // Form Fields\n    const name = findInput('name');\n\n    // Valdiate buttons\n    expect(submitButton).toBeTruthy();\n    expect(resetButton).toBeTruthy();\n\n    // Validte input Elements\n    expect(name).toBeTruthy();\n\n    const submitForm = async () => {\n      await type(name, 'user-phone name');\n\n      await click(submitButton);\n\n      await click(resetButton);\n    };\n\n    await submitForm();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UserPhoneFormComponent>",
                    "defaultValue": "{\n  component: UserPhoneFormComponent,\n  title: 'UserPhoneFormComponent',\n  decorators: [\n    applicationConfig({\n      providers: [\n        provideAnimations(),\n        provideMatFormFieldOptions({ appearance: 'outline' }),\n        provideErrorStateMatcher(),\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                }
            ],
            "libs/forms/src/lib/form-builders/manufacturer.ts": [
                {
                    "name": "ManufacturerFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/manufacturer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateManufacturerDto>('Manufacturer Form')\n    .add('name')\n    .required()\n    .shortText()\n    .add('description')\n    .longText()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/message.ts": [
                {
                    "name": "MessageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/message.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateMessageDto>(\n  'Message Form'\n)\n\n  .add('message')\n  .required()\n  .longText()\n\n  .add('source')\n  .required()\n\n  .add('target')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/notification.ts": [
                {
                    "name": "NotificationFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/notification.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateNotificationDto>('Notification Form')\n\n    .add('message')\n    .required()\n    .longText()\n\n    .add('source')\n    .required()\n\n    .add('target')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/permission.ts": [
                {
                    "name": "PermissionFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/permission.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreatePermissionDto>(\n  'Permission Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product.ts": [
                {
                    "name": "ProductFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductDto>(\n  'Product Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('category')\n\n  .add('department')\n\n  .add('manufacturers')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-image.ts": [
                {
                    "name": "ProductImageFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-image.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductImageDto>('ProductImage Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/product-video.ts": [
                {
                    "name": "ProductVideoFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/product-video.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProductVideoDto>('ProductVideo Form')\n    .add('name')\n    .required()\n    .shortText()\n\n    .add('url')\n    .required()\n    .url()\n\n    .add('owner')\n    .required()\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/project.ts": [
                {
                    "name": "ProjectFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/project.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateProjectDto>(\n  'Project Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/role.ts": [
                {
                    "name": "RoleFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/role.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateRoleDto>('Role Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('permissions')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sku.ts": [
                {
                    "name": "SkuFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sku.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSkuDto>('Sku Form')\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('upc')\n  .required()\n  .ean()\n\n  .add('description')\n  .longText()\n\n  .add('product')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/sprint.ts": [
                {
                    "name": "SprintFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/sprint.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateSprintDto>(\n  'Sprint Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('project')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/store.ts": [
                {
                    "name": "StoreFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateStoreDto>(\n  'Store Form'\n)\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n  \n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/task.ts": [
                {
                    "name": "TaskFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/task.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTaskDto>('Task Form')\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('sprint')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/ticket.ts": [
                {
                    "name": "TicketFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/ticket.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateTicketDto>(\n  'Ticket Form'\n)\n\n  .add('name')\n  .required()\n  .shortText()\n\n  .add('description')\n  .longText()\n\n  .add('difficulty')\n  .range(1, 10)\n\n  .add('due')\n  .date()\n\n  .add('startDate')\n  .date()\n\n  .add('finishDate')\n  .date()\n\n  .add('status')\n  .shortText()\n\n  .add('customer')\n  .required()\n\n  .add('assignees')\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-address.ts": [
                {
                    "name": "UserAddressFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-address.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserAddressDto>('UserAddress Form')\n    .add('street')\n    .required()\n    .shortText()\n\n    .add('city')\n    .required()\n    .shortText()\n\n    .add('state')\n    .required()\n    .shortText()\n\n    .add('zip')\n    .required()\n    .shortText()\n\n    .add('owner')\n    .required()\n\n    .done()\n    .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-email.ts": [
                {
                    "name": "UserEmailFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-email.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserEmailDto>(\n  'UserEmail Form'\n)\n  .add('email')\n  .required()\n  .email()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user.ts": [
                {
                    "name": "UserFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserDto>('User Form')\n\n  .add('username')\n  .required()\n  .email()\n\n  .add('password')\n  .required()\n  .password()\n\n  .add('roles')\n  .required()\n\n  .add('supervisor')\n  .required()\n\n  .done()\n  .lock()"
                }
            ],
            "libs/forms/src/lib/form-builders/user-phone.ts": [
                {
                    "name": "UserPhoneFormBuilder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/forms/src/lib/form-builders/user-phone.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroupBuilder<ICreateUserPhoneDto>(\n  'UserPhone Form'\n)\n  .add('phone')\n  .required()\n  .phone()\n\n  .add('owner')\n  .required()\n\n  .done()\n  .lock()"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/forms/src/lib/__base/form-type.ts": [
                {
                    "name": "FormType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<Record<T, FormControl>>",
                    "file": "libs/forms/src/lib/__base/form-type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/category/category-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategoryFormComponent>",
                    "file": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerAddressFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerEmailFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CustomerPhoneFormComponent>",
                    "file": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/department/department-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DepartmentFormComponent>",
                    "file": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ManufacturerFormComponent>",
                    "file": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/message/message-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MessageFormComponent>",
                    "file": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NotificationFormComponent>",
                    "file": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PermissionFormComponent>",
                    "file": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product/product-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductImageFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProductVideoFormComponent>",
                    "file": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/project/project-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProjectFormComponent>",
                    "file": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/role/role-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RoleFormComponent>",
                    "file": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkuFormComponent>",
                    "file": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SprintFormComponent>",
                    "file": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/store/store-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoreFormComponent>",
                    "file": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/task/task-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TaskFormComponent>",
                    "file": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TicketFormComponent>",
                    "file": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user/user-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserAddressFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserEmailFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UserPhoneFormComponent>",
                    "file": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 13,
        "status": "low",
        "files": [
            {
                "filePath": "libs/forms/src/lib/__base/base-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/category.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CategoryFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/customer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/department.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DepartmentFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/manufacturer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManufacturerFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/message.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MessageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/notification.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotificationFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/permission.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PermissionFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-image.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductImageFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product-video.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductVideoFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/product.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProductFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/project.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/role.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RoleFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sku.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SkuFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/sprint.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SprintFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StoreFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/task.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TaskFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/ticket.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TicketFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-address.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserAddressFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-email.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserEmailFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user-phone.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserPhoneFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-builders/user.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UserFormBuilder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/category/category-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-address/customer-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerAddressFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-email/customer-email-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerEmailFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer-phone/customer-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerPhoneFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/customer/customer-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomerFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/department/department-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DepartmentFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/manufacturer/manufacturer-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ManufacturerFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/message/message-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessageFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/notification/notification-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/permission/permission-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PermissionFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-image/product-image-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductImageFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product-video/product-video-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductVideoFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/product/product-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/project/project-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/role/role-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoleFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sku/sku-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkuFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/sprint/sprint-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SprintFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/store/store-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StoreFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/task/task-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TaskFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/ticket/ticket-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TicketFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-address/user-address-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserAddressFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-email/user-email-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEmailFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user-phone/user-phone-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserPhoneFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/forms/src/lib/form-components/user/user-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserFormComponent",
                "coveragePercent": 63,
                "coverageCount": "7/11",
                "status": "good"
            }
        ]
    }
}